INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['Quotes'], 'Horizons': {'Quotes': 4}}
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 40 entries, 0 to 39
Data columns (total 3 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   Index      40 non-null     float64
 1   Quotes     40 non-null     float64
 2   TV.advert  40 non-null     float64
dtypes: float64(3)
memory usage: 1.1 KB
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 40 entries, 0 to 39
Data columns (total 2 columns):
 #   Column  Non-Null Count  Dtype  
---  ------  --------------  -----  
 0   Index   40 non-null     float64
 1   Quotes  40 non-null     float64
dtypes: float64(2)
memory usage: 772.0 bytes
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 40 entries, 0 to 39
Data columns (total 2 columns):
 #   Column     Non-Null Count  Dtype  
---  ------     --------------  -----  
 0   Index      40 non-null     float64
 1   TV.advert  40 non-null     float64
dtypes: float64(2)
memory usage: 772.0 bytes
INFO:pyaf.std:TRAINING_ENGINE_END 4.539
INFO:pyaf.std:TIME_DETAIL TimeVariable='Index' TimeMin=2002.0 TimeMax=2004.25 TimeDelta=0.08333333333333333 Horizon=4
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='Quotes' Length=40  Min=8.39468 Max=18.43898  Mean=13.604347 StdDev=2.369165
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_Quotes' Min=0.0 Max=1.0  Mean=0.518669 StdDev=0.235872
INFO:pyaf.std:EXOGENOUS_DATA ['TV.advert']
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_Quotes_ConstantTrend_residue_Cycle_None_residue_XGBX(10)' [ConstantTrend + Cycle_None + XGBX]
INFO:pyaf.std:TREND_DETAIL '_Quotes_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_Quotes_ConstantTrend_residue_Cycle_None' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_Quotes_ConstantTrend_residue_Cycle_None_residue_XGBX(10)' [XGBX]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.1157), 'RMSE': np.float64(1.6647), 'MAE': np.float64(1.4177), 'MASE': np.float64(1.0289)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.0766), 'RMSE': np.float64(1.3297), 'MAE': np.float64(1.0677), 'MASE': np.float64(0.7792)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.1432), 'RMSE': np.float64(2.8359), 'MAE': np.float64(2.4366), 'MASE': np.float64(1.0571)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=4 {'MAPE': np.float64(0.1906), 'RMSE': np.float64(2.8833), 'MAE': np.float64(2.497), 'MASE': np.float64(1.8123)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=4 {'MAPE': np.float64(0.1444), 'RMSE': np.float64(2.2612), 'MAE': np.float64(1.9747), 'MASE': np.float64(1.441)}
INFO:pyaf.std:MODEL_PERFS Test STEP=4 {'MAPE': np.float64(0.2713), 'RMSE': np.float64(4.8371), 'MAE': np.float64(4.5762), 'MASE': np.float64(1.9853)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'L'} [LSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _Quotes_ConstantTrend 0.488253
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _Quotes_ConstantTrend_residue_Cycle_None None -0.004034 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:EXOGENOUS_VARIABLE_DETAIL_START
INFO:pyaf.std:EXOGENOUS_VARIABLE_DETAIL_CATEGORICAL_EXCLUDED 0 []
INFO:pyaf.std:EXOGENOUS_VARIABLE_DETAIL_CONTINUOUS 'TV.advert' {'Mean': np.float64(7.933625035714286), 'StdDev': np.float64(1.3056987790054533)}
INFO:pyaf.std:EXOGENOUS_VARIABLE_DETAIL_CONTINUOUS_EXCLUDED 0 []
INFO:pyaf.std:EXOGENOUS_VARIABLE_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'Quotes'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Quotes' 0 {'Transformation': '_Quotes', 'DecompositionType': 'T+S+R', 'Model': '_Quotes_ConstantTrend_residue_Cycle_None_residue_XGBX(10)', 'Voting': 77.5, 'Complexity': 'LSSSS', 'Forecast_MASE_1': 0.7792, 'Forecast_MASE_2': 1.1513, 'Forecast_MASE_3': 1.2508, 'Forecast_MASE_4': 1.441}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'Quotes' 1 {'Transformation': '_Quotes', 'DecompositionType': 'T+S+R', 'Model': '_Quotes_ConstantTrend_residue_zeroCycle[0.0]_residue_XGBX(10)', 'Voting': 77.5, 'Complexity': 'LSSSS', 'Forecast_MASE_1': 0.7792, 'Forecast_MASE_2': 1.1513, 'Forecast_MASE_3': 1.2508, 'Forecast_MASE_4': 1.441}
INFO:pyaf.std:COMPETITION_DETAIL_END 'Quotes'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/insurance_xgbx_Quotes_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/insurance_xgbx_Quotes_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/insurance_xgbx_Quotes_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/insurance_xgbx_Quotes_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/insurance_xgbx_Quotes_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/insurance_xgbx_Quotes_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/insurance_xgbx_Quotes_quantiles_output.png')
INFO:pyaf.std:FORECASTING_ENGINE_START {'Signals': ['Quotes'], 'Horizons': {'Quotes': 4}}
INFO:pyaf.std:FORECASTING_ENGINE_END 0.173
Forecast Columns  Index(['Index', 'Quotes', 'Quotes_scaled', '_Quotes', 'row_number',
       'Index_Normalized', '_Quotes_ConstantTrend',
       '_Quotes_ConstantTrend_residue',
       '_Quotes_ConstantTrend_residue_Cycle_None',
       '_Quotes_ConstantTrend_residue_Cycle_None_residue', 'TV.advert',
       '_Quotes_ConstantTrend_residue_Cycle_None_residue_XGBX(10)',
       '_Quotes_ConstantTrend_residue_Cycle_None_residue_XGBX(10)_residue',
       'Quotes_Transformed', '_Quotes_Trend', '_Quotes_Trend_residue',
       '_Quotes_Cycle', '_Quotes_Cycle_residue', '_Quotes_AR',
       '_Quotes_AR_residue', '_Quotes_TransformedForecast',
       '_Quotes_Detrended', '_Quotes_Deseasonalized',
       'Quotes_TransformedForecast_inverted', 'Quotes_Forecast',
       '_Quotes_TransformedResidue', 'Quotes_Residue',
       'Quotes_Forecast_Lower_Bound', 'Quotes_Forecast_Upper_Bound',
       'Quotes_Forecast_Quantile_50'],
      dtype='object')
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 44 entries, 0 to 43
Data columns (total 3 columns):
 #   Column           Non-Null Count  Dtype  
---  ------           --------------  -----  
 0   Index            44 non-null     float64
 1   Quotes           40 non-null     float64
 2   Quotes_Forecast  44 non-null     float64
dtypes: float64(3)
memory usage: 1.2 KB
None
Forecasts
 [[2005.33333333           nan   13.007438  ]
 [2005.41666667           nan   12.97245661]
 [2005.5                  nan   13.30647114]
 [2005.58333333           nan   13.30647114]]


<ModelInfo>
{
    "Quotes": {
        "Complexity": {
            "AR": "L",
            "Cycle": "S",
            "Decomposition": "S",
            "Transformation": "S",
            "Trend": "S"
        },
        "Dataset": {
            "Exogenous_Data": {
                "Categorical_Variables": {},
                "Categorical_Variables_Excluded": [],
                "Categorical_Variables_Usage": {},
                "Continuous_Variables": {
                    "TV.advert": {
                        "Mean": 7.933625035714286,
                        "StdDev": 1.3056987790054533
                    }
                },
                "Continuous_Variables_Excluded": []
            },
            "Signal": "Quotes",
            "Time": {
                "Horizon": 4,
                "TimeDelta": "0.08333333333333333",
                "TimeMax": "2005.25",
                "TimeMin": "2002.0",
                "TimeVariable": "Index"
            },
            "Training_Signal_Length": 40
        },
        "Model": {
            "AR_Model": "XGBX",
            "Best_Decomposition": "_Quotes_ConstantTrend_residue_Cycle_None_residue_XGBX(10)",
            "Cycle": "Cycle_None",
            "Signal_Decomposition_Type": "T+S+R",
            "Signal_Transoformation": "NoTransf",
            "Trend": "ConstantTrend"
        },
        "Model_Performance": {
            "1": {
                "AUC": 0.6875,
                "DiffSMAPE": 0.0799,
                "ErrorMean": -0.6357,
                "ErrorStdDev": 1.1679,
                "KS": 0.375,
                "KendallTau": 0.4728,
                "Length": 8,
                "LnQ": 0.0764,
                "MAE": 1.0677,
                "MAPE": 0.0766,
                "MASE": 0.7792,
                "MannWhitneyU": 44.0,
                "MedAE": 0.8765,
                "Pearson": 0.5598,
                "R2": -0.0517,
                "RMSE": 1.3297,
                "RMSSE": 0.9224,
                "SMAPE": 0.0802,
                "Signal": "Quotes_Forecast_1"
            },
            "4": {
                "AUC": 0.7031,
                "DiffSMAPE": 0.1504,
                "ErrorMean": -0.7221,
                "ErrorStdDev": 2.1428,
                "KS": 0.5,
                "KendallTau": -0.3858,
                "Length": 8,
                "LnQ": 0.2344,
                "MAE": 1.9747,
                "MAPE": 0.1444,
                "MASE": 1.441,
                "MannWhitneyU": 45.0,
                "MedAE": 1.8961,
                "Pearson": -0.5251,
                "R2": -2.0415,
                "RMSE": 2.2612,
                "RMSSE": 1.5686,
                "SMAPE": 0.1509,
                "Signal": "Quotes_Forecast_4"
            }
        },
        "Model_Selection_Criterion": "MASE"
    },
    "Training_Time": 4.539
}
</ModelInfo>




<Forecast>
{"Index":{"36":2005.0,"37":2005.0833333333,"38":2005.1666666667,"39":2005.25,"40":2005.3333333333,"41":2005.4166666667,"42":2005.5,"43":2005.5833333333},"Quotes":{"36":15.47126,"37":18.43898,"38":17.49186,"39":14.49168,"40":null,"41":null,"42":null,"43":null},"Quotes_Forecast":{"36":11.9838111632,"37":14.7496259567,"38":14.9632277259,"39":14.4505929839,"40":13.0074379998,"41":12.97245661,"42":13.3064711363,"43":13.3064711363}}
</Forecast>


EXECUTION_TIME_DETAIL = {'CMD':'timeout 480 python tests/bugs/issue_106/insurance_exog_xgbx.py', 'ElapsedTimeSecs':(18.01, 0.47, 7.15), 'MAX_MEM_KB':243648, 'CPU_PRCNT':'42%', 'FILES_IN':8, 'FILES_OUT':1528, 'EXIT_STATUS':0}
