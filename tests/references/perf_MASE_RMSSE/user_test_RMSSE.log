INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['y'], 'Horizons': {'y': 48}}
INFO:pyaf.std:TRAINING_ENGINE_END 101.455
INFO:pyaf.std:TIME_DETAIL TimeVariable='ds' TimeMin=2020-07-10T18:00:00.000000 TimeMax=2020-07-24T01:00:00.000000 TimeDelta=<DateOffset: hours=1> Horizon=48
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='y' Length=449  Min=0.0 Max=19.0  Mean=8.290376 StdDev=5.017777
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_y' Min=0.0 Max=1.0  Mean=0.436336 StdDev=0.264094
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_y_ConstantTrend_residue_Cycle_24_residue_NoAR' [ConstantTrend + Cycle_24 + NoAR]
INFO:pyaf.std:TREND_DETAIL '_y_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_y_ConstantTrend_residue_Cycle_24' [Cycle_24]
INFO:pyaf.std:AUTOREG_DETAIL '_y_ConstantTrend_residue_Cycle_24_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.7498), 'RMSE': np.float64(3.5401), 'MAE': np.float64(2.6746), 'MASE': np.float64(1.5308), 'RMSSE': np.float64(1.3913)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(2016460906.4269), 'RMSE': np.float64(4.3341), 'MAE': np.float64(3.5082), 'MASE': np.float64(2.1534), 'RMSSE': np.float64(1.8778)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.4682), 'RMSE': np.float64(5.7771), 'MAE': np.float64(4.6858), 'MASE': np.float64(2.6037), 'RMSSE': np.float64(2.2474)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=48 {'MAPE': np.float64(0.7498), 'RMSE': np.float64(3.5401), 'MAE': np.float64(2.6746), 'MASE': np.float64(1.5308), 'RMSSE': np.float64(1.3913)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=48 {'MAPE': np.float64(2016460906.4269), 'RMSE': np.float64(4.3341), 'MAE': np.float64(3.5082), 'MASE': np.float64(2.1534), 'RMSSE': np.float64(1.8778)}
INFO:pyaf.std:MODEL_PERFS Test STEP=48 {'MAPE': np.float64(0.4682), 'RMSE': np.float64(5.7771), 'MAE': np.float64(4.6858), 'MASE': np.float64(2.6037), 'RMSSE': np.float64(2.2474)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _y_ConstantTrend 0.421663
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _y_ConstantTrend_residue_Cycle_24 24 0.010354 {0: np.float64(-0.27254), 1: np.float64(-0.193593), 2: np.float64(-0.268154), 3: np.float64(-0.040084), 4: np.float64(0.065179), 5: np.float64(0.148512), 6: np.float64(0.20553), 7: np.float64(0.166056), 8: np.float64(0.209916), 9: np.float64(0.209916), 10: np.float64(0.209916), 11: np.float64(0.209916), 12: np.float64(0.187986), 13: np.float64(0.104653), 14: np.float64(-0.026926), 15: np.float64(-0.224295), 16: np.float64(-0.250611), 17: np.float64(-0.189207), 18: np.float64(-0.27254), 19: np.float64(-0.325172), 20: np.float64(-0.08833), 21: np.float64(-0.132189), 22: np.float64(-0.062014), 23: np.float64(0.025705)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'y'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'y' 0 {'Transformation': '_y', 'DecompositionType': 'T+S+R', 'Model': '_y_ConstantTrend_residue_Cycle_24_residue_NoAR', 'Voting': 2326.5625, 'Complexity': 'SSSSS', 'Forecast_RMSSE_1': 1.8778, 'Forecast_RMSSE_2': 1.8778, 'Forecast_RMSSE_3': 1.8778, 'Forecast_RMSSE_4': 1.8778, 'Forecast_RMSSE_5': 1.8778, 'Forecast_RMSSE_6': 1.8778, 'Forecast_RMSSE_7': 1.8778, 'Forecast_RMSSE_8': 1.8778, 'Forecast_RMSSE_9': 1.8778, 'Forecast_RMSSE_10': 1.8778, 'Forecast_RMSSE_11': 1.8778, 'Forecast_RMSSE_12': 1.8778, 'Forecast_RMSSE_13': 1.8778, 'Forecast_RMSSE_14': 1.8778, 'Forecast_RMSSE_15': 1.8778, 'Forecast_RMSSE_16': 1.8778, 'Forecast_RMSSE_17': 1.8778, 'Forecast_RMSSE_18': 1.8778, 'Forecast_RMSSE_19': 1.8778, 'Forecast_RMSSE_20': 1.8778, 'Forecast_RMSSE_21': 1.8778, 'Forecast_RMSSE_22': 1.8778, 'Forecast_RMSSE_23': 1.8778, 'Forecast_RMSSE_24': 1.8778, 'Forecast_RMSSE_25': 1.8778, 'Forecast_RMSSE_26': 1.8778, 'Forecast_RMSSE_27': 1.8778, 'Forecast_RMSSE_28': 1.8778, 'Forecast_RMSSE_29': 1.8778, 'Forecast_RMSSE_30': 1.8778, 'Forecast_RMSSE_31': 1.8778, 'Forecast_RMSSE_32': 1.8778, 'Forecast_RMSSE_33': 1.8778, 'Forecast_RMSSE_34': 1.8778, 'Forecast_RMSSE_35': 1.8778, 'Forecast_RMSSE_36': 1.8778, 'Forecast_RMSSE_37': 1.8778, 'Forecast_RMSSE_38': 1.8778, 'Forecast_RMSSE_39': 1.8778, 'Forecast_RMSSE_40': 1.8778, 'Forecast_RMSSE_41': 1.8778, 'Forecast_RMSSE_42': 1.8778, 'Forecast_RMSSE_43': 1.8778, 'Forecast_RMSSE_44': 1.8778, 'Forecast_RMSSE_45': 1.8778, 'Forecast_RMSSE_46': 1.8778, 'Forecast_RMSSE_47': 1.8778, 'Forecast_RMSSE_48': 1.8778}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'y' 1 {'Transformation': '_y', 'DecompositionType': 'T+S+R', 'Model': '_y_ConstantTrend_residue_Seasonal_Hour_residue_NoAR', 'Voting': 2326.5625, 'Complexity': 'SSSSS', 'Forecast_RMSSE_1': 1.8778, 'Forecast_RMSSE_2': 1.8778, 'Forecast_RMSSE_3': 1.8778, 'Forecast_RMSSE_4': 1.8778, 'Forecast_RMSSE_5': 1.8778, 'Forecast_RMSSE_6': 1.8778, 'Forecast_RMSSE_7': 1.8778, 'Forecast_RMSSE_8': 1.8778, 'Forecast_RMSSE_9': 1.8778, 'Forecast_RMSSE_10': 1.8778, 'Forecast_RMSSE_11': 1.8778, 'Forecast_RMSSE_12': 1.8778, 'Forecast_RMSSE_13': 1.8778, 'Forecast_RMSSE_14': 1.8778, 'Forecast_RMSSE_15': 1.8778, 'Forecast_RMSSE_16': 1.8778, 'Forecast_RMSSE_17': 1.8778, 'Forecast_RMSSE_18': 1.8778, 'Forecast_RMSSE_19': 1.8778, 'Forecast_RMSSE_20': 1.8778, 'Forecast_RMSSE_21': 1.8778, 'Forecast_RMSSE_22': 1.8778, 'Forecast_RMSSE_23': 1.8778, 'Forecast_RMSSE_24': 1.8778, 'Forecast_RMSSE_25': 1.8778, 'Forecast_RMSSE_26': 1.8778, 'Forecast_RMSSE_27': 1.8778, 'Forecast_RMSSE_28': 1.8778, 'Forecast_RMSSE_29': 1.8778, 'Forecast_RMSSE_30': 1.8778, 'Forecast_RMSSE_31': 1.8778, 'Forecast_RMSSE_32': 1.8778, 'Forecast_RMSSE_33': 1.8778, 'Forecast_RMSSE_34': 1.8778, 'Forecast_RMSSE_35': 1.8778, 'Forecast_RMSSE_36': 1.8778, 'Forecast_RMSSE_37': 1.8778, 'Forecast_RMSSE_38': 1.8778, 'Forecast_RMSSE_39': 1.8778, 'Forecast_RMSSE_40': 1.8778, 'Forecast_RMSSE_41': 1.8778, 'Forecast_RMSSE_42': 1.8778, 'Forecast_RMSSE_43': 1.8778, 'Forecast_RMSSE_44': 1.8778, 'Forecast_RMSSE_45': 1.8778, 'Forecast_RMSSE_46': 1.8778, 'Forecast_RMSSE_47': 1.8778, 'Forecast_RMSSE_48': 1.8778}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'y' 2 {'Transformation': '_y', 'DecompositionType': 'T+S+R', 'Model': '_y_LinearTrend_residue_Cycle_24_residue_NoAR', 'Voting': 2326.5625, 'Complexity': 'SSSSS', 'Forecast_RMSSE_1': 1.8746, 'Forecast_RMSSE_2': 1.8746, 'Forecast_RMSSE_3': 1.8746, 'Forecast_RMSSE_4': 1.8746, 'Forecast_RMSSE_5': 1.8746, 'Forecast_RMSSE_6': 1.8746, 'Forecast_RMSSE_7': 1.8746, 'Forecast_RMSSE_8': 1.8746, 'Forecast_RMSSE_9': 1.8746, 'Forecast_RMSSE_10': 1.8746, 'Forecast_RMSSE_11': 1.8746, 'Forecast_RMSSE_12': 1.8746, 'Forecast_RMSSE_13': 1.8746, 'Forecast_RMSSE_14': 1.8746, 'Forecast_RMSSE_15': 1.8746, 'Forecast_RMSSE_16': 1.8746, 'Forecast_RMSSE_17': 1.8746, 'Forecast_RMSSE_18': 1.8746, 'Forecast_RMSSE_19': 1.8746, 'Forecast_RMSSE_20': 1.8746, 'Forecast_RMSSE_21': 1.8746, 'Forecast_RMSSE_22': 1.8746, 'Forecast_RMSSE_23': 1.8746, 'Forecast_RMSSE_24': 1.8746, 'Forecast_RMSSE_25': 1.8746, 'Forecast_RMSSE_26': 1.8746, 'Forecast_RMSSE_27': 1.8746, 'Forecast_RMSSE_28': 1.8746, 'Forecast_RMSSE_29': 1.8746, 'Forecast_RMSSE_30': 1.8746, 'Forecast_RMSSE_31': 1.8746, 'Forecast_RMSSE_32': 1.8746, 'Forecast_RMSSE_33': 1.8746, 'Forecast_RMSSE_34': 1.8746, 'Forecast_RMSSE_35': 1.8746, 'Forecast_RMSSE_36': 1.8746, 'Forecast_RMSSE_37': 1.8746, 'Forecast_RMSSE_38': 1.8746, 'Forecast_RMSSE_39': 1.8746, 'Forecast_RMSSE_40': 1.8746, 'Forecast_RMSSE_41': 1.8746, 'Forecast_RMSSE_42': 1.8746, 'Forecast_RMSSE_43': 1.8746, 'Forecast_RMSSE_44': 1.8746, 'Forecast_RMSSE_45': 1.8746, 'Forecast_RMSSE_46': 1.8746, 'Forecast_RMSSE_47': 1.8746, 'Forecast_RMSSE_48': 1.8746}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'y' 3 {'Transformation': '_y', 'DecompositionType': 'T+S+R', 'Model': '_y_LinearTrend_residue_Seasonal_Hour_residue_NoAR', 'Voting': 2326.5625, 'Complexity': 'SSSSS', 'Forecast_RMSSE_1': 1.8746, 'Forecast_RMSSE_2': 1.8746, 'Forecast_RMSSE_3': 1.8746, 'Forecast_RMSSE_4': 1.8746, 'Forecast_RMSSE_5': 1.8746, 'Forecast_RMSSE_6': 1.8746, 'Forecast_RMSSE_7': 1.8746, 'Forecast_RMSSE_8': 1.8746, 'Forecast_RMSSE_9': 1.8746, 'Forecast_RMSSE_10': 1.8746, 'Forecast_RMSSE_11': 1.8746, 'Forecast_RMSSE_12': 1.8746, 'Forecast_RMSSE_13': 1.8746, 'Forecast_RMSSE_14': 1.8746, 'Forecast_RMSSE_15': 1.8746, 'Forecast_RMSSE_16': 1.8746, 'Forecast_RMSSE_17': 1.8746, 'Forecast_RMSSE_18': 1.8746, 'Forecast_RMSSE_19': 1.8746, 'Forecast_RMSSE_20': 1.8746, 'Forecast_RMSSE_21': 1.8746, 'Forecast_RMSSE_22': 1.8746, 'Forecast_RMSSE_23': 1.8746, 'Forecast_RMSSE_24': 1.8746, 'Forecast_RMSSE_25': 1.8746, 'Forecast_RMSSE_26': 1.8746, 'Forecast_RMSSE_27': 1.8746, 'Forecast_RMSSE_28': 1.8746, 'Forecast_RMSSE_29': 1.8746, 'Forecast_RMSSE_30': 1.8746, 'Forecast_RMSSE_31': 1.8746, 'Forecast_RMSSE_32': 1.8746, 'Forecast_RMSSE_33': 1.8746, 'Forecast_RMSSE_34': 1.8746, 'Forecast_RMSSE_35': 1.8746, 'Forecast_RMSSE_36': 1.8746, 'Forecast_RMSSE_37': 1.8746, 'Forecast_RMSSE_38': 1.8746, 'Forecast_RMSSE_39': 1.8746, 'Forecast_RMSSE_40': 1.8746, 'Forecast_RMSSE_41': 1.8746, 'Forecast_RMSSE_42': 1.8746, 'Forecast_RMSSE_43': 1.8746, 'Forecast_RMSSE_44': 1.8746, 'Forecast_RMSSE_45': 1.8746, 'Forecast_RMSSE_46': 1.8746, 'Forecast_RMSSE_47': 1.8746, 'Forecast_RMSSE_48': 1.8746}
INFO:pyaf.std:COMPETITION_DETAIL_END 'y'
INFO:pyaf.std:FORECASTING_ENGINE_START {'Signals': ['y'], 'Horizons': {'y': 48}}
INFO:pyaf.std:FORECASTING_ENGINE_END 3.558


<ModelInfo>
{
    "Training_Time": 101.455,
    "y": {
        "Complexity": {
            "AR": "S",
            "Cycle": "S",
            "Decomposition": "S",
            "Transformation": "S",
            "Trend": "S"
        },
        "Dataset": {
            "Signal": "y",
            "Time": {
                "Horizon": 48,
                "TimeDelta": "<DateOffset: hours=1>",
                "TimeMax": "2020-07-29 10:00:00",
                "TimeMin": "2020-07-10 18:00:00",
                "TimeVariable": "ds"
            },
            "Training_Signal_Length": 449
        },
        "Model": {
            "AR_Model": "NoAR",
            "Best_Decomposition": "_y_ConstantTrend_residue_Cycle_24_residue_NoAR",
            "Cycle": "Cycle_24",
            "Signal_Decomposition_Type": "T+S+R",
            "Signal_Transoformation": "NoTransf",
            "Trend": "ConstantTrend"
        },
        "Model_Performance": {
            "1": {
                "AUC": 0.472,
                "DiffSMAPE": 0.5544,
                "ErrorMean": 0.0453,
                "ErrorStdDev": 4.3339,
                "KS": 0.2099,
                "KendallTau": 0.3613,
                "Length": 81,
                "LnQ": Infinity,
                "MAE": 3.5082,
                "MAPE": 2016460906.4269,
                "MASE": 2.1534,
                "MannWhitneyU": 3096.5,
                "MedAE": 3.0,
                "Pearson": 0.5371,
                "R2": 0.2562,
                "RMSE": 4.3341,
                "RMSSE": 1.8778,
                "SMAPE": 0.5601,
                "Signal": "y_Forecast_1"
            },
            "48": {
                "AUC": 0.472,
                "DiffSMAPE": 0.5544,
                "ErrorMean": 0.0453,
                "ErrorStdDev": 4.3339,
                "KS": 0.2099,
                "KendallTau": 0.3613,
                "Length": 81,
                "LnQ": Infinity,
                "MAE": 3.5082,
                "MAPE": 2016460906.4269,
                "MASE": 2.1534,
                "MannWhitneyU": 3096.5,
                "MedAE": 3.0,
                "Pearson": 0.5371,
                "R2": 0.2562,
                "RMSE": 4.3341,
                "RMSSE": 1.8778,
                "SMAPE": 0.5601,
                "Signal": "y_Forecast_48"
            }
        },
        "Model_Selection_Criterion": "RMSSE"
    }
}
</ModelInfo>


                    ds  ...  y_Forecast_Quantile_94
0  2020-07-10 18:00:00  ...                     NaN
1  2020-07-10 19:00:00  ...                     NaN
2  2020-07-10 20:00:00  ...                     NaN
3  2020-07-10 21:00:00  ...                     NaN
4  2020-07-10 22:00:00  ...                     NaN
5  2020-07-10 23:00:00  ...                     NaN
6  2020-07-11 00:00:00  ...                     NaN
7  2020-07-11 01:00:00  ...                     NaN
8  2020-07-11 02:00:00  ...                     NaN
9  2020-07-11 03:00:00  ...                     NaN
10 2020-07-11 04:00:00  ...                     NaN
11 2020-07-11 05:00:00  ...                     NaN
12 2020-07-11 06:00:00  ...                     NaN
13 2020-07-11 07:00:00  ...                     NaN
14 2020-07-11 08:00:00  ...                     NaN
15 2020-07-11 09:00:00  ...                     NaN
16 2020-07-11 10:00:00  ...                     NaN
17 2020-07-11 11:00:00  ...                     NaN
18 2020-07-11 12:00:00  ...                     NaN
19 2020-07-11 13:00:00  ...                     NaN
20 2020-07-11 14:00:00  ...                     NaN
21 2020-07-11 15:00:00  ...                     NaN
22 2020-07-11 16:00:00  ...                     NaN
23 2020-07-11 17:00:00  ...                     NaN
24 2020-07-11 18:00:00  ...                     NaN
25 2020-07-11 19:00:00  ...                     NaN
26 2020-07-11 20:00:00  ...                     NaN
27 2020-07-11 21:00:00  ...                     NaN
28 2020-07-11 22:00:00  ...                     NaN
29 2020-07-11 23:00:00  ...                     NaN
30 2020-07-12 00:00:00  ...                     NaN
31 2020-07-12 01:00:00  ...                     NaN
32 2020-07-12 02:00:00  ...                     NaN
33 2020-07-12 03:00:00  ...                     NaN
34 2020-07-12 04:00:00  ...                     NaN
35 2020-07-12 05:00:00  ...                     NaN
36 2020-07-12 06:00:00  ...                     NaN
37 2020-07-12 07:00:00  ...                     NaN
38 2020-07-12 08:00:00  ...                     NaN
39 2020-07-12 09:00:00  ...                     NaN
40 2020-07-12 10:00:00  ...                     NaN
41 2020-07-12 11:00:00  ...                     NaN
42 2020-07-12 12:00:00  ...                     NaN
43 2020-07-12 13:00:00  ...                     NaN
44 2020-07-12 14:00:00  ...                     NaN
45 2020-07-12 15:00:00  ...                     NaN
46 2020-07-12 16:00:00  ...                     NaN
47 2020-07-12 17:00:00  ...                     NaN

[48 rows x 38 columns]
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/veturilo_RMSSE_y_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/veturilo_RMSSE_y_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/veturilo_RMSSE_y_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/veturilo_RMSSE_y_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/veturilo_RMSSE_y_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/veturilo_RMSSE_y_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/veturilo_RMSSE_y_quantiles_output.png')
                     ds   y  ...  y_Forecast_Quantile_83  y_Forecast_Quantile_94
449 2020-07-29 11:00:00 NaN  ...                8.116667               11.266667
450 2020-07-29 12:00:00 NaN  ...                6.533333                9.683333
451 2020-07-29 13:00:00 NaN  ...                5.533333                8.683333
452 2020-07-29 14:00:00 NaN  ...               10.033333               13.183333
453 2020-07-29 15:00:00 NaN  ...                9.200000               12.350000
454 2020-07-29 16:00:00 NaN  ...               10.533333               13.683333
455 2020-07-29 17:00:00 NaN  ...               12.200000               15.350000
456 2020-07-29 18:00:00 NaN  ...                6.533333                9.683333
457 2020-07-29 19:00:00 NaN  ...                8.033333               11.183333
458 2020-07-29 20:00:00 NaN  ...                6.616667                9.766667
459 2020-07-29 21:00:00 NaN  ...               10.950000               14.100000
460 2020-07-29 22:00:00 NaN  ...               12.950000               16.100000
461 2020-07-29 23:00:00 NaN  ...               14.533333               17.683333
462 2020-07-30 00:00:00 NaN  ...               15.616667               18.766667
463 2020-07-30 01:00:00 NaN  ...               14.866667               18.016667
464 2020-07-30 02:00:00 NaN  ...               15.700000               18.850000
465 2020-07-30 03:00:00 NaN  ...               15.700000               18.850000
466 2020-07-30 04:00:00 NaN  ...               15.700000               18.850000
467 2020-07-30 05:00:00 NaN  ...               15.700000               18.850000
468 2020-07-30 06:00:00 NaN  ...               15.283333               18.433333
469 2020-07-30 07:00:00 NaN  ...               13.700000               16.850000
470 2020-07-30 08:00:00 NaN  ...               11.200000               14.350000
471 2020-07-30 09:00:00 NaN  ...                7.450000               10.600000
472 2020-07-30 10:00:00 NaN  ...                6.950000               10.100000
473 2020-07-30 11:00:00 NaN  ...                8.116667               11.266667
474 2020-07-30 12:00:00 NaN  ...                6.533333                9.683333
475 2020-07-30 13:00:00 NaN  ...                5.533333                8.683333
476 2020-07-30 14:00:00 NaN  ...               10.033333               13.183333
477 2020-07-30 15:00:00 NaN  ...                9.200000               12.350000
478 2020-07-30 16:00:00 NaN  ...               10.533333               13.683333
479 2020-07-30 17:00:00 NaN  ...               12.200000               15.350000
480 2020-07-30 18:00:00 NaN  ...                6.533333                9.683333
481 2020-07-30 19:00:00 NaN  ...                8.033333               11.183333
482 2020-07-30 20:00:00 NaN  ...                6.616667                9.766667
483 2020-07-30 21:00:00 NaN  ...               10.950000               14.100000
484 2020-07-30 22:00:00 NaN  ...               12.950000               16.100000
485 2020-07-30 23:00:00 NaN  ...               14.533333               17.683333
486 2020-07-31 00:00:00 NaN  ...               15.616667               18.766667
487 2020-07-31 01:00:00 NaN  ...               14.866667               18.016667
488 2020-07-31 02:00:00 NaN  ...               15.700000               18.850000
489 2020-07-31 03:00:00 NaN  ...               15.700000               18.850000
490 2020-07-31 04:00:00 NaN  ...               15.700000               18.850000
491 2020-07-31 05:00:00 NaN  ...               15.700000               18.850000
492 2020-07-31 06:00:00 NaN  ...               15.283333               18.433333
493 2020-07-31 07:00:00 NaN  ...               13.700000               16.850000
494 2020-07-31 08:00:00 NaN  ...               11.200000               14.350000
495 2020-07-31 09:00:00 NaN  ...                7.450000               10.600000
496 2020-07-31 10:00:00 NaN  ...                6.950000               10.100000

[48 rows x 38 columns]
EXECUTION_TIME_DETAIL = {'CMD':'timeout 480 python tests/perf_MASE_RMSSE/user_test_RMSSE.py', 'ElapsedTimeSecs':(150.54, 0.68, 61.47), 'MAX_MEM_KB':242220, 'CPU_PRCNT':'41%', 'FILES_IN':576, 'FILES_OUT':2576, 'EXIT_STATUS':0}
