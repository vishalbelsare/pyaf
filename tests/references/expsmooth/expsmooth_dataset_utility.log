INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['utility'], 'Horizons': {'utility': 2}}
INFO:pyaf.std:TRAINING_ENGINE_END 3.758
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1.0 TimeMax=101.666666666667 TimeDelta=0.0416666666666668 Horizon=2
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='utility' Length=3024  Min=3798 Max=14940  Mean=8352.436508 StdDev=2433.025653
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_utility' Min=0.0 Max=1.0  Mean=0.408763 StdDev=0.218365
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_utility_Lag1Trend_residue_Cycle_24_residue_AR(64)' [Lag1Trend + Cycle_24 + AR]
INFO:pyaf.std:TREND_DETAIL '_utility_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_utility_Lag1Trend_residue_Cycle_24' [Cycle_24]
INFO:pyaf.std:AUTOREG_DETAIL '_utility_Lag1Trend_residue_Cycle_24_residue_AR(64)' [AR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0182), 'RMSE': np.float64(219.1566), 'MAE': np.float64(155.039), 'MASE': np.float64(0.4012)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.0278), 'RMSE': np.float64(287.4963), 'MAE': np.float64(168.2988), 'MASE': np.float64(0.456)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0324), 'RMSE': np.float64(187.3191), 'MAE': np.float64(183.8989), 'MASE': np.float64(0.193)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=2 {'MAPE': np.float64(0.0361), 'RMSE': np.float64(420.1575), 'MAE': np.float64(308.2695), 'MASE': np.float64(0.7978)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=2 {'MAPE': np.float64(0.0596), 'RMSE': np.float64(551.5623), 'MAE': np.float64(356.1083), 'MASE': np.float64(0.9648)}
INFO:pyaf.std:MODEL_PERFS Test STEP=2 {'MAPE': np.float64(0.0778), 'RMSE': np.float64(477.9929), 'MAE': np.float64(413.6707), 'MASE': np.float64(0.4341)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'L'} [LSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.458446
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _utility_Lag1Trend_residue_Cycle_24 24 -0.008257 {0: np.float64(-0.032938), 1: np.float64(-0.008706), 2: np.float64(-0.004398), 3: np.float64(0.004308), 4: np.float64(0.015886), 5: np.float64(0.050799), 6: np.float64(0.149345), 7: np.float64(0.131843), 8: np.float64(0.020373), 9: np.float64(-0.011578), 10: np.float64(-0.010232), 11: np.float64(-0.01086), 12: np.float64(-0.02881), 13: np.float64(-0.011578), 14: np.float64(-0.021899), 15: np.float64(-0.01454), 16: np.float64(-0.018848), 17: np.float64(-0.003545), 18: np.float64(0.013059), 19: np.float64(0.000673), 20: np.float64(-0.013687), 21: np.float64(-0.02881), 22: np.float64(-0.073954), 23: np.float64(-0.069557)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 _utility_Lag1Trend_residue_Cycle_24_residue_Lag1 0.402037
INFO:pyaf.std:AR_MODEL_COEFF 2 _utility_Lag1Trend_residue_Cycle_24_residue_Lag24 0.358826
INFO:pyaf.std:AR_MODEL_COEFF 3 _utility_Lag1Trend_residue_Cycle_24_residue_Lag2 -0.137841
INFO:pyaf.std:AR_MODEL_COEFF 4 _utility_Lag1Trend_residue_Cycle_24_residue_Lag26 -0.102535
INFO:pyaf.std:AR_MODEL_COEFF 5 _utility_Lag1Trend_residue_Cycle_24_residue_Lag23 0.076077
INFO:pyaf.std:AR_MODEL_COEFF 6 _utility_Lag1Trend_residue_Cycle_24_residue_Lag15 -0.074589
INFO:pyaf.std:AR_MODEL_COEFF 7 _utility_Lag1Trend_residue_Cycle_24_residue_Lag9 -0.069474
INFO:pyaf.std:AR_MODEL_COEFF 8 _utility_Lag1Trend_residue_Cycle_24_residue_Lag50 0.067719
INFO:pyaf.std:AR_MODEL_COEFF 9 _utility_Lag1Trend_residue_Cycle_24_residue_Lag11 -0.06668
INFO:pyaf.std:AR_MODEL_COEFF 10 _utility_Lag1Trend_residue_Cycle_24_residue_Lag35 0.065244
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'utility'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'utility' 0 {'Transformation': '_utility', 'DecompositionType': 'T+S+R', 'Model': '_utility_Lag1Trend_residue_Cycle_24_residue_AR(64)', 'Voting': 94.5, 'Complexity': 'LSSSS', 'Forecast_MASE_1': 0.456, 'Forecast_MASE_2': 0.9648}
INFO:pyaf.std:COMPETITION_DETAIL_END 'utility'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_utility.csv_2_utility_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_utility.csv_2_utility_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_utility.csv_2_utility_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_utility.csv_2_utility_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_utility.csv_2_utility_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_utility.csv_2_utility_prediction_intervals_output.png')
/home/runner/work/pyaf/pyaf/pyaf/TS/Plots.py:35: UserWarning: Tight layout not applied. The bottom and top margins cannot be made large enough to accommodate all Axes decorations.
  fig.tight_layout()
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_utility.csv_2_utility_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['utility'], 'Horizons': {'utility': 4}}
PERFORMANCE MAPE_FORECAST utility 0.0596
INFO:pyaf.std:TRAINING_ENGINE_END 4.338
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1.0 TimeMax=101.625 TimeDelta=0.041666666666666664 Horizon=4
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='utility' Length=3024  Min=3798 Max=14940  Mean=8352.436508 StdDev=2433.025653
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_utility' Min=0.0 Max=1.0  Mean=0.408763 StdDev=0.218365
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_utility_Lag1Trend_residue_Cycle_24_residue_NoAR' [Lag1Trend + Cycle_24 + NoAR]
INFO:pyaf.std:TREND_DETAIL '_utility_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_utility_Lag1Trend_residue_Cycle_24' [Cycle_24]
INFO:pyaf.std:AUTOREG_DETAIL '_utility_Lag1Trend_residue_Cycle_24_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0223), 'RMSE': np.float64(278.1867), 'MAE': np.float64(188.0008), 'MASE': np.float64(0.4868)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.0413), 'RMSE': np.float64(368.9685), 'MAE': np.float64(248.4843), 'MASE': np.float64(0.6716)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0345), 'RMSE': np.float64(299.5694), 'MAE': np.float64(219.625), 'MASE': np.float64(0.3343)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=4 {'MAPE': np.float64(0.0613), 'RMSE': np.float64(702.2694), 'MAE': np.float64(512.5099), 'MASE': np.float64(1.327)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=4 {'MAPE': np.float64(0.1181), 'RMSE': np.float64(905.0928), 'MAE': np.float64(696.351), 'MASE': np.float64(1.882)}
INFO:pyaf.std:MODEL_PERFS Test STEP=4 {'MAPE': np.float64(0.083), 'RMSE': np.float64(649.293), 'MAE': np.float64(520.25), 'MASE': np.float64(0.7919)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.458446
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _utility_Lag1Trend_residue_Cycle_24 24 -0.008257 {0: np.float64(-0.032938), 1: np.float64(-0.008706), 2: np.float64(-0.004398), 3: np.float64(0.004308), 4: np.float64(0.015886), 5: np.float64(0.050799), 6: np.float64(0.149345), 7: np.float64(0.131843), 8: np.float64(0.020373), 9: np.float64(-0.011578), 10: np.float64(-0.010232), 11: np.float64(-0.01086), 12: np.float64(-0.02881), 13: np.float64(-0.011578), 14: np.float64(-0.021899), 15: np.float64(-0.01454), 16: np.float64(-0.018848), 17: np.float64(-0.003545), 18: np.float64(0.013059), 19: np.float64(0.000673), 20: np.float64(-0.013687), 21: np.float64(-0.02881), 22: np.float64(-0.073954), 23: np.float64(-0.069557)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'utility'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'utility' 0 {'Transformation': '_utility', 'DecompositionType': 'T+S+R', 'Model': '_utility_Lag1Trend_residue_Cycle_24_residue_NoAR', 'Voting': 151.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.6716, 'Forecast_MASE_2': 1.187, 'Forecast_MASE_3': 1.5945, 'Forecast_MASE_4': 1.882}
INFO:pyaf.std:COMPETITION_DETAIL_END 'utility'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_utility.csv_4_utility_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_utility.csv_4_utility_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_utility.csv_4_utility_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_utility.csv_4_utility_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_utility.csv_4_utility_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_utility.csv_4_utility_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_utility.csv_4_utility_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['utility'], 'Horizons': {'utility': 8}}
PERFORMANCE MAPE_FORECAST utility 0.1181
INFO:pyaf.std:TRAINING_ENGINE_END 10.456
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1.0 TimeMax=101.458333333333 TimeDelta=0.04166666666666653 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='utility' Length=3024  Min=3798 Max=14940  Mean=8352.436508 StdDev=2433.025653
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_utility' Min=0.0 Max=1.0  Mean=0.408763 StdDev=0.218365
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_utility_Lag1Trend_residue_Cycle_24_residue_NoAR' [Lag1Trend + Cycle_24 + NoAR]
INFO:pyaf.std:TREND_DETAIL '_utility_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_utility_Lag1Trend_residue_Cycle_24' [Cycle_24]
INFO:pyaf.std:AUTOREG_DETAIL '_utility_Lag1Trend_residue_Cycle_24_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0223), 'RMSE': np.float64(278.35), 'MAE': np.float64(188.1066), 'MASE': np.float64(0.4867)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.0411), 'RMSE': np.float64(368.1138), 'MAE': np.float64(247.2185), 'MASE': np.float64(0.6675)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0393), 'RMSE': np.float64(323.9907), 'MAE': np.float64(269.5), 'MASE': np.float64(0.5897)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=8 {'MAPE': np.float64(0.0928), 'RMSE': np.float64(992.3039), 'MAE': np.float64(766.1414), 'MASE': np.float64(1.9822)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=8 {'MAPE': np.float64(0.1611), 'RMSE': np.float64(1166.85), 'MAE': np.float64(958.6051), 'MASE': np.float64(2.5884)}
INFO:pyaf.std:MODEL_PERFS Test STEP=8 {'MAPE': np.float64(0.1076), 'RMSE': np.float64(756.7924), 'MAE': np.float64(705.5625), 'MASE': np.float64(1.5439)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.458446
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _utility_Lag1Trend_residue_Cycle_24 24 -0.008257 {0: np.float64(-0.032938), 1: np.float64(-0.008706), 2: np.float64(-0.004398), 3: np.float64(0.004308), 4: np.float64(0.015886), 5: np.float64(0.050799), 6: np.float64(0.149345), 7: np.float64(0.131843), 8: np.float64(0.020373), 9: np.float64(-0.011578), 10: np.float64(-0.010232), 11: np.float64(-0.01086), 12: np.float64(-0.0289), 13: np.float64(-0.011578), 14: np.float64(-0.021899), 15: np.float64(-0.014495), 16: np.float64(-0.018848), 17: np.float64(-0.003545), 18: np.float64(0.013059), 19: np.float64(0.000673), 20: np.float64(-0.013687), 21: np.float64(-0.02881), 22: np.float64(-0.073954), 23: np.float64(-0.069557)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'utility'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'utility' 0 {'Transformation': '_utility', 'DecompositionType': 'T+S+R', 'Model': '_utility_Lag1Trend_residue_Cycle_24_residue_NoAR', 'Voting': 279.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.6675, 'Forecast_MASE_2': 1.1809, 'Forecast_MASE_3': 1.5879, 'Forecast_MASE_4': 1.8764, 'Forecast_MASE_5': 2.104, 'Forecast_MASE_6': 2.2899, 'Forecast_MASE_7': 2.4459, 'Forecast_MASE_8': 2.5884}
INFO:pyaf.std:COMPETITION_DETAIL_END 'utility'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_utility.csv_8_utility_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_utility.csv_8_utility_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_utility.csv_8_utility_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_utility.csv_8_utility_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_utility.csv_8_utility_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_utility.csv_8_utility_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_utility.csv_8_utility_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['utility'], 'Horizons': {'utility': 12}}
PERFORMANCE MAPE_FORECAST utility 0.1611
INFO:pyaf.std:TRAINING_ENGINE_END 13.406
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1.0 TimeMax=101.333333333333 TimeDelta=0.041666666666666526 Horizon=12
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='utility' Length=3024  Min=3798 Max=14940  Mean=8352.436508 StdDev=2433.025653
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_utility' Min=-0.29483 Max=0.191976  Mean=-0.000112 StdDev=0.050138
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_utility_ConstantTrend_residue_Cycle_24_residue_AR(64)' [ConstantTrend + Cycle_24 + AR]
INFO:pyaf.std:TREND_DETAIL 'Diff_utility_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_utility_ConstantTrend_residue_Cycle_24' [Cycle_24]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_utility_ConstantTrend_residue_Cycle_24_residue_AR(64)' [AR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.1801), 'RMSE': np.float64(2208.9688), 'MAE': np.float64(1723.6581), 'MASE': np.float64(4.4561)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.1294), 'RMSE': np.float64(957.5657), 'MAE': np.float64(717.4508), 'MASE': np.float64(1.934)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0246), 'RMSE': np.float64(209.4216), 'MAE': np.float64(159.8646), 'MASE': np.float64(0.4441)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=12 {'MAPE': np.float64(0.1814), 'RMSE': np.float64(2184.828), 'MAE': np.float64(1717.7998), 'MASE': np.float64(4.4409)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=12 {'MAPE': np.float64(0.1468), 'RMSE': np.float64(1133.2432), 'MAE': np.float64(847.0107), 'MASE': np.float64(2.2833)}
INFO:pyaf.std:MODEL_PERFS Test STEP=12 {'MAPE': np.float64(0.0561), 'RMSE': np.float64(500.7413), 'MAE': np.float64(430.3413), 'MASE': np.float64(1.1954)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'M', 'Trend': 'S', 'Cycle': 'S', 'AR': 'L'} [LMSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.458445521450368
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND Diff_utility_ConstantTrend -1e-06
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_utility_ConstantTrend_residue_Cycle_24 24 -0.008256 {0: np.float64(-0.032937), 1: np.float64(-0.008705), 2: np.float64(-0.004397), 3: np.float64(0.004309), 4: np.float64(0.015887), 5: np.float64(0.0508), 6: np.float64(0.149346), 7: np.float64(0.131845), 8: np.float64(0.020375), 9: np.float64(-0.011621), 10: np.float64(-0.010589), 11: np.float64(-0.011218), 12: np.float64(-0.028898), 13: np.float64(-0.011577), 14: np.float64(-0.021898), 15: np.float64(-0.014493), 16: np.float64(-0.018846), 17: np.float64(-0.003544), 18: np.float64(0.01306), 19: np.float64(0.000674), 20: np.float64(-0.013686), 21: np.float64(-0.028809), 22: np.float64(-0.073953), 23: np.float64(-0.069555)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_COEFF 1 Diff_utility_ConstantTrend_residue_Cycle_24_residue_Lag1 0.402724
INFO:pyaf.std:AR_MODEL_COEFF 2 Diff_utility_ConstantTrend_residue_Cycle_24_residue_Lag24 0.359233
INFO:pyaf.std:AR_MODEL_COEFF 3 Diff_utility_ConstantTrend_residue_Cycle_24_residue_Lag2 -0.136442
INFO:pyaf.std:AR_MODEL_COEFF 4 Diff_utility_ConstantTrend_residue_Cycle_24_residue_Lag26 -0.10345
INFO:pyaf.std:AR_MODEL_COEFF 5 Diff_utility_ConstantTrend_residue_Cycle_24_residue_Lag23 0.07654
INFO:pyaf.std:AR_MODEL_COEFF 6 Diff_utility_ConstantTrend_residue_Cycle_24_residue_Lag15 -0.074875
INFO:pyaf.std:AR_MODEL_COEFF 7 Diff_utility_ConstantTrend_residue_Cycle_24_residue_Lag9 -0.068941
INFO:pyaf.std:AR_MODEL_COEFF 8 Diff_utility_ConstantTrend_residue_Cycle_24_residue_Lag50 0.067425
INFO:pyaf.std:AR_MODEL_COEFF 9 Diff_utility_ConstantTrend_residue_Cycle_24_residue_Lag11 -0.065748
INFO:pyaf.std:AR_MODEL_COEFF 10 Diff_utility_ConstantTrend_residue_Cycle_24_residue_Lag29 -0.063868
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'utility'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'utility' 0 {'Transformation': 'Diff_utility', 'DecompositionType': 'T+S+R', 'Model': 'Diff_utility_ConstantTrend_residue_Cycle_24_residue_AR(64)', 'Voting': 403.25, 'Complexity': 'LMSSS', 'Forecast_MASE_1': 1.934, 'Forecast_MASE_2': 2.13, 'Forecast_MASE_3': 2.2079, 'Forecast_MASE_4': 2.2418, 'Forecast_MASE_5': 2.2558, 'Forecast_MASE_6': 2.2647, 'Forecast_MASE_7': 2.2738, 'Forecast_MASE_8': 2.2809, 'Forecast_MASE_9': 2.2883, 'Forecast_MASE_10': 2.2884, 'Forecast_MASE_11': 2.2835, 'Forecast_MASE_12': 2.2833}
INFO:pyaf.std:COMPETITION_DETAIL_END 'utility'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_utility.csv_12_utility_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_utility.csv_12_utility_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_utility.csv_12_utility_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_utility.csv_12_utility_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_utility.csv_12_utility_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_utility.csv_12_utility_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_utility.csv_12_utility_quantiles_output.png')
PERFORMANCE MAPE_FORECAST utility 0.1468
EXECUTION_TIME_DETAIL = {'CMD':'timeout 480 python tests/expsmooth/expsmooth_dataset_utility.py', 'ElapsedTimeSecs':(72.03, 1.63, 39.51), 'MAX_MEM_KB':268488, 'CPU_PRCNT':'57%', 'FILES_IN':8, 'FILES_OUT':9600, 'EXIT_STATUS':0}
