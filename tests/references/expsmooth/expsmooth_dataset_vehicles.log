INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['vehicles'], 'Horizons': {'vehicles': 2}}
INFO:pyaf.std:TRAINING_ENGINE_END 3.928
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1.0 TimeMax=57.1666666666667 TimeDelta=0.04166666666666669 Horizon=2
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='vehicles' Length=1689  Min=154 Max=5549  Mean=2060.417999 StdDev=1339.149233
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_vehicles' Min=0.0 Max=1.0  Mean=0.353368 StdDev=0.24822
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_vehicles_Lag1Trend_residue_Cycle_24_residue_NoAR' [Lag1Trend + Cycle_24 + NoAR]
INFO:pyaf.std:TREND_DETAIL '_vehicles_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_vehicles_Lag1Trend_residue_Cycle_24' [Cycle_24]
INFO:pyaf.std:AUTOREG_DETAIL '_vehicles_Lag1Trend_residue_Cycle_24_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.1624), 'RMSE': np.float64(391.4493), 'MAE': np.float64(214.4863), 'MASE': np.float64(0.4792)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.1826), 'RMSE': np.float64(396.4932), 'MAE': np.float64(230.4083), 'MASE': np.float64(0.5086)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.039), 'RMSE': np.float64(186.9438), 'MAE': np.float64(168.0), 'MASE': np.float64(0.1583)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=2 {'MAPE': np.float64(0.2721), 'RMSE': np.float64(645.6362), 'MAE': np.float64(348.3314), 'MASE': np.float64(0.7782)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=2 {'MAPE': np.float64(0.2986), 'RMSE': np.float64(650.2393), 'MAE': np.float64(365.4038), 'MASE': np.float64(0.8066)}
INFO:pyaf.std:MODEL_PERFS Test STEP=2 {'MAPE': np.float64(0.0565), 'RMSE': np.float64(260.8891), 'MAE': np.float64(247.25), 'MASE': np.float64(0.233)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.101019
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _vehicles_Lag1Trend_residue_Cycle_24 24 -0.017238 {0: np.float64(-0.060056), 1: np.float64(-0.065802), 2: np.float64(-0.02836), 3: np.float64(-0.007229), 4: np.float64(-0.001854), 5: np.float64(0.02975), 6: np.float64(0.141705), 7: np.float64(0.483411), 8: np.float64(0.212604), 9: np.float64(-0.102224), 10: np.float64(-0.164782), 11: np.float64(-0.053105), 12: np.float64(-0.01835), 13: np.float64(-0.009175), 14: np.float64(-0.016497), 15: np.float64(-0.01937), 16: np.float64(0.029564), 17: np.float64(0.064597), 18: np.float64(0.10519), 19: np.float64(-0.101019), 20: np.float64(-0.143837), 21: np.float64(-0.135032), 22: np.float64(-0.047451), 23: np.float64(-0.033642)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'vehicles'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'vehicles' 0 {'Transformation': '_vehicles', 'DecompositionType': 'T+S+R', 'Model': '_vehicles_Lag1Trend_residue_Cycle_24_residue_NoAR', 'Voting': 93.0, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.5086, 'Forecast_MASE_2': 0.8066}
INFO:pyaf.std:COMPETITION_DETAIL_END 'vehicles'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_vehicles.csv_2_vehicles_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_vehicles.csv_2_vehicles_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_vehicles.csv_2_vehicles_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_vehicles.csv_2_vehicles_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_vehicles.csv_2_vehicles_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_vehicles.csv_2_vehicles_prediction_intervals_output.png')
/home/runner/work/pyaf/pyaf/pyaf/TS/Plots.py:35: UserWarning: Tight layout not applied. The bottom and top margins cannot be made large enough to accommodate all Axes decorations.
  fig.tight_layout()
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_vehicles.csv_2_vehicles_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['vehicles'], 'Horizons': {'vehicles': 4}}
PERFORMANCE MAPE_FORECAST vehicles 0.2986
INFO:pyaf.std:TRAINING_ENGINE_END 5.413
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1.0 TimeMax=57.125 TimeDelta=0.041666666666666664 Horizon=4
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='vehicles' Length=1689  Min=154 Max=5549  Mean=2060.417999 StdDev=1339.149233
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_vehicles' Min=0.0 Max=1.0  Mean=0.353368 StdDev=0.24822
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_vehicles_ConstantTrend_residue_Cycle_24_residue_NoAR' [ConstantTrend + Cycle_24 + NoAR]
INFO:pyaf.std:TREND_DETAIL '_vehicles_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_vehicles_ConstantTrend_residue_Cycle_24' [Cycle_24]
INFO:pyaf.std:AUTOREG_DETAIL '_vehicles_ConstantTrend_residue_Cycle_24_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.2247), 'RMSE': np.float64(670.4103), 'MAE': np.float64(314.6899), 'MASE': np.float64(0.7025)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.2741), 'RMSE': np.float64(721.516), 'MAE': np.float64(366.8605), 'MASE': np.float64(0.8128)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0505), 'RMSE': np.float64(179.6131), 'MAE': np.float64(132.25), 'MASE': np.float64(0.0833)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=4 {'MAPE': np.float64(0.2247), 'RMSE': np.float64(670.4103), 'MAE': np.float64(314.6899), 'MASE': np.float64(0.7025)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=4 {'MAPE': np.float64(0.2741), 'RMSE': np.float64(721.516), 'MAE': np.float64(366.8605), 'MASE': np.float64(0.8128)}
INFO:pyaf.std:MODEL_PERFS Test STEP=4 {'MAPE': np.float64(0.0505), 'RMSE': np.float64(179.6131), 'MAE': np.float64(132.25), 'MASE': np.float64(0.0833)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _vehicles_ConstantTrend 0.354049
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _vehicles_ConstantTrend_residue_Cycle_24 24 0.047434 {0: np.float64(-0.234864), 1: np.float64(-0.308821), 2: np.float64(-0.337181), 3: np.float64(-0.343298), 4: np.float64(-0.343483), 5: np.float64(-0.31568), 6: np.float64(-0.172306), 7: np.float64(0.310826), 8: np.float64(0.551327), 9: np.float64(0.428899), 10: np.float64(0.234367), 11: np.float64(0.163097), 12: np.float64(0.138537), 13: np.float64(0.129918), 14: np.float64(0.114533), 15: np.float64(0.090344), 16: np.float64(0.116294), 17: np.float64(0.174033), 18: np.float64(0.31129), 19: np.float64(0.182559), 20: np.float64(0.046044), 21: np.float64(-0.086301), 22: np.float64(-0.124855), 23: np.float64(-0.167765)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'vehicles'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'vehicles' 0 {'Transformation': '_vehicles', 'DecompositionType': 'T+S+R', 'Model': '_vehicles_ConstantTrend_residue_Cycle_24_residue_NoAR', 'Voting': 153.0, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.8128, 'Forecast_MASE_2': 0.8128, 'Forecast_MASE_3': 0.8128, 'Forecast_MASE_4': 0.8128}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'vehicles' 1 {'Transformation': '_vehicles', 'DecompositionType': 'T+S+R', 'Model': '_vehicles_Lag1Trend_residue_Cycle_24_residue_NoAR', 'Voting': 152.25, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.5114, 'Forecast_MASE_2': 0.8112, 'Forecast_MASE_3': 1.0405, 'Forecast_MASE_4': 1.1789}
INFO:pyaf.std:COMPETITION_DETAIL_END 'vehicles'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_vehicles.csv_4_vehicles_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_vehicles.csv_4_vehicles_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_vehicles.csv_4_vehicles_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_vehicles.csv_4_vehicles_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_vehicles.csv_4_vehicles_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_vehicles.csv_4_vehicles_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_vehicles.csv_4_vehicles_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['vehicles'], 'Horizons': {'vehicles': 8}}
PERFORMANCE MAPE_FORECAST vehicles 0.2741
INFO:pyaf.std:TRAINING_ENGINE_END 10.113
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1.0 TimeMax=56.9583333333333 TimeDelta=0.041666666666666644 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='vehicles' Length=1689  Min=154 Max=5549  Mean=2060.417999 StdDev=1339.149233
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_vehicles' Min=0.0 Max=1.0  Mean=0.353368 StdDev=0.24822
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_vehicles_ConstantTrend_residue_Cycle_24_residue_NoAR' [ConstantTrend + Cycle_24 + NoAR]
INFO:pyaf.std:TREND_DETAIL '_vehicles_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_vehicles_ConstantTrend_residue_Cycle_24' [Cycle_24]
INFO:pyaf.std:AUTOREG_DETAIL '_vehicles_ConstantTrend_residue_Cycle_24_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.2249), 'RMSE': np.float64(671.4405), 'MAE': np.float64(315.4442), 'MASE': np.float64(0.7035)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.2719), 'RMSE': np.float64(721.5049), 'MAE': np.float64(366.7507), 'MASE': np.float64(0.8102)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.179), 'RMSE': np.float64(139.7447), 'MAE': np.float64(98.9375), 'MASE': np.float64(0.1377)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=8 {'MAPE': np.float64(0.2249), 'RMSE': np.float64(671.4405), 'MAE': np.float64(315.4442), 'MASE': np.float64(0.7035)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=8 {'MAPE': np.float64(0.2719), 'RMSE': np.float64(721.5049), 'MAE': np.float64(366.7507), 'MASE': np.float64(0.8102)}
INFO:pyaf.std:MODEL_PERFS Test STEP=8 {'MAPE': np.float64(0.179), 'RMSE': np.float64(139.7447), 'MAE': np.float64(98.9375), 'MASE': np.float64(0.1377)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _vehicles_ConstantTrend 0.354939
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _vehicles_ConstantTrend_residue_Cycle_24 24 0.04849 {0: np.float64(-0.236496), 1: np.float64(-0.310268), 2: np.float64(-0.337979), 3: np.float64(-0.344003), 4: np.float64(-0.344374), 5: np.float64(-0.31657), 6: np.float64(-0.173196), 7: np.float64(0.309936), 8: np.float64(0.550436), 9: np.float64(0.428008), 10: np.float64(0.233476), 11: np.float64(0.162207), 12: np.float64(0.137647), 13: np.float64(0.129028), 14: np.float64(0.113643), 15: np.float64(0.089454), 16: np.float64(0.115404), 17: np.float64(0.173143), 18: np.float64(0.310399), 19: np.float64(0.181669), 20: np.float64(0.045154), 21: np.float64(-0.087191), 22: np.float64(-0.125745), 23: np.float64(-0.168655)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'vehicles'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'vehicles' 0 {'Transformation': '_vehicles', 'DecompositionType': 'T+S+R', 'Model': '_vehicles_ConstantTrend_residue_Cycle_24_residue_NoAR', 'Voting': 281.25, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.8102, 'Forecast_MASE_2': 0.8102, 'Forecast_MASE_3': 0.8102, 'Forecast_MASE_4': 0.8102, 'Forecast_MASE_5': 0.8102, 'Forecast_MASE_6': 0.8102, 'Forecast_MASE_7': 0.8102, 'Forecast_MASE_8': 0.8102}
INFO:pyaf.std:COMPETITION_DETAIL_END 'vehicles'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_vehicles.csv_8_vehicles_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_vehicles.csv_8_vehicles_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_vehicles.csv_8_vehicles_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_vehicles.csv_8_vehicles_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_vehicles.csv_8_vehicles_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_vehicles.csv_8_vehicles_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_vehicles.csv_8_vehicles_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['vehicles'], 'Horizons': {'vehicles': 12}}
PERFORMANCE MAPE_FORECAST vehicles 0.2719
INFO:pyaf.std:TRAINING_ENGINE_END 12.111
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1.0 TimeMax=56.8333333333333 TimeDelta=0.041666666666666644 Horizon=12
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='vehicles' Length=1689  Min=154 Max=5549  Mean=2060.417999 StdDev=1339.149233
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_vehicles' Min=0.0 Max=1.0  Mean=0.353368 StdDev=0.24822
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_vehicles_ConstantTrend_residue_Cycle_24_residue_NoAR' [ConstantTrend + Cycle_24 + NoAR]
INFO:pyaf.std:TREND_DETAIL '_vehicles_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_vehicles_ConstantTrend_residue_Cycle_24' [Cycle_24]
INFO:pyaf.std:AUTOREG_DETAIL '_vehicles_ConstantTrend_residue_Cycle_24_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.2251), 'RMSE': np.float64(672.1763), 'MAE': np.float64(315.8031), 'MASE': np.float64(0.7036)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.2677), 'RMSE': np.float64(721.4548), 'MAE': np.float64(364.5685), 'MASE': np.float64(0.8058)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.2805), 'RMSE': np.float64(247.0814), 'MAE': np.float64(191.9583), 'MASE': np.float64(0.3547)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=12 {'MAPE': np.float64(0.2251), 'RMSE': np.float64(672.1763), 'MAE': np.float64(315.8031), 'MASE': np.float64(0.7036)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=12 {'MAPE': np.float64(0.2677), 'RMSE': np.float64(721.4548), 'MAE': np.float64(364.5685), 'MASE': np.float64(0.8058)}
INFO:pyaf.std:MODEL_PERFS Test STEP=12 {'MAPE': np.float64(0.2805), 'RMSE': np.float64(247.0814), 'MAE': np.float64(191.9583), 'MASE': np.float64(0.3547)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _vehicles_ConstantTrend 0.355162
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _vehicles_ConstantTrend_residue_Cycle_24 24 0.049287 {0: np.float64(-0.236719), 1: np.float64(-0.310491), 2: np.float64(-0.338202), 3: np.float64(-0.344226), 4: np.float64(-0.344596), 5: np.float64(-0.316793), 6: np.float64(-0.173419), 7: np.float64(0.309713), 8: np.float64(0.550214), 9: np.float64(0.427785), 10: np.float64(0.233253), 11: np.float64(0.161984), 12: np.float64(0.137424), 13: np.float64(0.128805), 14: np.float64(0.11342), 15: np.float64(0.089231), 16: np.float64(0.115181), 17: np.float64(0.17292), 18: np.float64(0.310177), 19: np.float64(0.181446), 20: np.float64(0.044931), 21: np.float64(-0.087692), 22: np.float64(-0.128841), 23: np.float64(-0.169249)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'vehicles'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'vehicles' 0 {'Transformation': '_vehicles', 'DecompositionType': 'T+S+R', 'Model': '_vehicles_ConstantTrend_residue_Cycle_24_residue_NoAR', 'Voting': 408.0, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.8058, 'Forecast_MASE_2': 0.8058, 'Forecast_MASE_3': 0.8058, 'Forecast_MASE_4': 0.8058, 'Forecast_MASE_5': 0.8058, 'Forecast_MASE_6': 0.8058, 'Forecast_MASE_7': 0.8058, 'Forecast_MASE_8': 0.8058, 'Forecast_MASE_9': 0.8058, 'Forecast_MASE_10': 0.8058, 'Forecast_MASE_11': 0.8058, 'Forecast_MASE_12': 0.8058}
INFO:pyaf.std:COMPETITION_DETAIL_END 'vehicles'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_vehicles.csv_12_vehicles_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_vehicles.csv_12_vehicles_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_vehicles.csv_12_vehicles_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_vehicles.csv_12_vehicles_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_vehicles.csv_12_vehicles_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_vehicles.csv_12_vehicles_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_vehicles.csv_12_vehicles_quantiles_output.png')
PERFORMANCE MAPE_FORECAST vehicles 0.2677
EXECUTION_TIME_DETAIL = {'CMD':'timeout 480 python tests/expsmooth/expsmooth_dataset_vehicles.py', 'ElapsedTimeSecs':(71.26, 1.41, 38.32), 'MAX_MEM_KB':266848, 'CPU_PRCNT':'55%', 'FILES_IN':8, 'FILES_OUT':11200, 'EXIT_STATUS':0}
