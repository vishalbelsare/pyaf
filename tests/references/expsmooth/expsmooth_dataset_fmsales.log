INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['fmsales'], 'Horizons': {'fmsales': 2}}
INFO:pyaf.std:TRAINING_ENGINE_END 2.266
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1 TimeMax=48 TimeDelta=1 Horizon=2
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='fmsales' Length=62  Min=22.24138 Max=51.914081  Mean=32.474861 StdDev=5.44569
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_fmsales' Min=0.0 Max=1.0  Mean=0.344879 StdDev=0.183525
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_fmsales_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_fmsales_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_fmsales_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_fmsales_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0638), 'RMSE': np.float64(2.8382), 'MAE': np.float64(2.1058), 'MASE': np.float64(0.9792)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.1018), 'RMSE': np.float64(5.9026), 'MAE': np.float64(3.7008), 'MASE': np.float64(0.9579)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0882), 'RMSE': np.float64(4.0514), 'MAE': np.float64(2.9865), 'MASE': np.float64(0.5217)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=2 {'MAPE': np.float64(0.07), 'RMSE': np.float64(3.0924), 'MAE': np.float64(2.2849), 'MASE': np.float64(1.0624)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=2 {'MAPE': np.float64(0.1475), 'RMSE': np.float64(7.6564), 'MAE': np.float64(5.1312), 'MASE': np.float64(1.3281)}
INFO:pyaf.std:MODEL_PERFS Test STEP=2 {'MAPE': np.float64(0.1016), 'RMSE': np.float64(4.2612), 'MAE': np.float64(3.3859), 'MASE': np.float64(0.5915)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.027458
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _fmsales_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'fmsales'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'fmsales' 0 {'Transformation': '_fmsales', 'DecompositionType': 'T+S+R', 'Model': '_fmsales_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 93.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.9579, 'Forecast_MASE_2': 1.3281}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'fmsales' 1 {'Transformation': 'CumSum_fmsales', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_fmsales_Lag1Trend_residue_Cycle_None_residue_NoAR', 'Voting': 93.5, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.9579, 'Forecast_MASE_2': 1.3281}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'fmsales' 2 {'Transformation': 'CumSum_fmsales', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_fmsales_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 93.5, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.9579, 'Forecast_MASE_2': 1.3281}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'fmsales' 3 {'Transformation': 'Diff_fmsales', 'DecompositionType': 'T+S+R', 'Model': 'Diff_fmsales_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 93.5, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.9579, 'Forecast_MASE_2': 1.3281}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'fmsales' 4 {'Transformation': 'RelDiff_fmsales', 'DecompositionType': 'T+S+R', 'Model': 'RelDiff_fmsales_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 93.5, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.9579, 'Forecast_MASE_2': 1.3281}
INFO:pyaf.std:COMPETITION_DETAIL_END 'fmsales'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_fmsales.csv_2_fmsales_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_fmsales.csv_2_fmsales_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_fmsales.csv_2_fmsales_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_fmsales.csv_2_fmsales_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_fmsales.csv_2_fmsales_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_fmsales.csv_2_fmsales_prediction_intervals_output.png')
/home/runner/work/pyaf/pyaf/pyaf/TS/Plots.py:35: UserWarning: Tight layout not applied. The bottom and top margins cannot be made large enough to accommodate all Axes decorations.
  fig.tight_layout()
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_fmsales.csv_2_fmsales_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['fmsales'], 'Horizons': {'fmsales': 4}}
PERFORMANCE MAPE_FORECAST fmsales 0.1475
INFO:pyaf.std:TRAINING_ENGINE_END 3.43
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1 TimeMax=46 TimeDelta=1 Horizon=4
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='fmsales' Length=62  Min=22.24138 Max=51.914081  Mean=32.474861 StdDev=5.44569
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_fmsales' Min=0.027458 Max=21.382477  Mean=9.395811 StdDev=6.984107
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_fmsales_LinearTrend_residue_Cycle_None_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_fmsales_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_fmsales_LinearTrend_residue_Cycle_None' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_fmsales_LinearTrend_residue_Cycle_None_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.1258), 'RMSE': np.float64(4.7871), 'MAE': np.float64(3.4836), 'MASE': np.float64(1.5785)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.137), 'RMSE': np.float64(7.3063), 'MAE': np.float64(5.4739), 'MASE': np.float64(1.4199)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.12), 'RMSE': np.float64(3.7082), 'MAE': np.float64(3.4782), 'MASE': np.float64(1.4863)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=4 {'MAPE': np.float64(0.1258), 'RMSE': np.float64(4.7871), 'MAE': np.float64(3.4836), 'MASE': np.float64(1.5785)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=4 {'MAPE': np.float64(0.137), 'RMSE': np.float64(7.3063), 'MAE': np.float64(5.4739), 'MASE': np.float64(1.4199)}
INFO:pyaf.std:MODEL_PERFS Test STEP=4 {'MAPE': np.float64(0.12), 'RMSE': np.float64(3.7082), 'MAE': np.float64(3.4782), 'MASE': np.float64(1.4863)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'M', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [MSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (np.float64(-1.876514), array([15.97226]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_fmsales_LinearTrend_residue_Cycle_None None -0.010631 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'fmsales'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'fmsales' 0 {'Transformation': 'CumSum_fmsales', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_fmsales_LinearTrend_residue_Cycle_None_residue_NoAR', 'Voting': 152.5, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 1.4199, 'Forecast_MASE_2': 1.4199, 'Forecast_MASE_3': 1.4199, 'Forecast_MASE_4': 1.4199}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'fmsales' 1 {'Transformation': 'CumSum_fmsales', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_fmsales_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 152.5, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 1.4199, 'Forecast_MASE_2': 1.4199, 'Forecast_MASE_3': 1.4199, 'Forecast_MASE_4': 1.4199}
INFO:pyaf.std:COMPETITION_DETAIL_END 'fmsales'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_fmsales.csv_4_fmsales_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_fmsales.csv_4_fmsales_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_fmsales.csv_4_fmsales_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_fmsales.csv_4_fmsales_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_fmsales.csv_4_fmsales_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_fmsales.csv_4_fmsales_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_fmsales.csv_4_fmsales_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['fmsales'], 'Horizons': {'fmsales': 8}}
PERFORMANCE MAPE_FORECAST fmsales 0.137
INFO:pyaf.std:TRAINING_ENGINE_END 7.207
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1 TimeMax=43 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='fmsales' Length=62  Min=22.24138 Max=51.914081  Mean=32.474861 StdDev=5.44569
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_fmsales' Min=0.0 Max=1.0  Mean=0.344879 StdDev=0.183525
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_fmsales_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_fmsales_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_fmsales_LinearTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_fmsales_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0982), 'RMSE': np.float64(3.784), 'MAE': np.float64(2.9443), 'MASE': np.float64(1.3911)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.1074), 'RMSE': np.float64(5.517), 'MAE': np.float64(4.0449), 'MASE': np.float64(0.8701)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.3493), 'RMSE': np.float64(10.5904), 'MAE': np.float64(10.3801), 'MASE': np.float64(5.1581)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=8 {'MAPE': np.float64(0.0982), 'RMSE': np.float64(3.784), 'MAE': np.float64(2.9443), 'MASE': np.float64(1.3911)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=8 {'MAPE': np.float64(0.1074), 'RMSE': np.float64(5.517), 'MAE': np.float64(4.0449), 'MASE': np.float64(0.8701)}
INFO:pyaf.std:MODEL_PERFS Test STEP=8 {'MAPE': np.float64(0.3493), 'RMSE': np.float64(10.5904), 'MAE': np.float64(10.3801), 'MASE': np.float64(5.1581)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (np.float64(0.134302), array([0.353991]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _fmsales_LinearTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'fmsales'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'fmsales' 0 {'Transformation': '_fmsales', 'DecompositionType': 'T+S+R', 'Model': '_fmsales_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 283.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.8701, 'Forecast_MASE_2': 0.8701, 'Forecast_MASE_3': 0.8701, 'Forecast_MASE_4': 0.8701, 'Forecast_MASE_5': 0.8701, 'Forecast_MASE_6': 0.8701, 'Forecast_MASE_7': 0.8701, 'Forecast_MASE_8': 0.8701}
INFO:pyaf.std:COMPETITION_DETAIL_END 'fmsales'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_fmsales.csv_8_fmsales_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_fmsales.csv_8_fmsales_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_fmsales.csv_8_fmsales_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_fmsales.csv_8_fmsales_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_fmsales.csv_8_fmsales_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_fmsales.csv_8_fmsales_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_fmsales.csv_8_fmsales_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['fmsales'], 'Horizons': {'fmsales': 12}}
PERFORMANCE MAPE_FORECAST fmsales 0.1074
INFO:pyaf.std:TRAINING_ENGINE_END 9.401
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1 TimeMax=62 TimeDelta=1 Horizon=12
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='fmsales' Length=62  Min=22.24138 Max=51.914081  Mean=32.474861 StdDev=5.44569
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_fmsales' Min=0.0 Max=1.0  Mean=0.344879 StdDev=0.183525
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_fmsales_PolyTrend_residue_Cycle_None_residue_NoAR' [PolyTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_fmsales_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL '_fmsales_PolyTrend_residue_Cycle_None' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_fmsales_PolyTrend_residue_Cycle_None_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0878), 'RMSE': np.float64(4.0465), 'MAE': np.float64(2.8902), 'MASE': np.float64(1.164)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.0878), 'RMSE': np.float64(4.0465), 'MAE': np.float64(2.8902), 'MASE': np.float64(1.164)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0878), 'RMSE': np.float64(4.0465), 'MAE': np.float64(2.8902), 'MASE': np.float64(1.164)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=12 {'MAPE': np.float64(0.0878), 'RMSE': np.float64(4.0465), 'MAE': np.float64(2.8902), 'MASE': np.float64(1.164)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=12 {'MAPE': np.float64(0.0878), 'RMSE': np.float64(4.0465), 'MAE': np.float64(2.8902), 'MASE': np.float64(1.164)}
INFO:pyaf.std:MODEL_PERFS Test STEP=12 {'MAPE': np.float64(0.0878), 'RMSE': np.float64(4.0465), 'MAE': np.float64(2.8902), 'MASE': np.float64(1.164)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'M', 'Cycle': 'S', 'AR': 'S'} [MSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (np.float64(-0.004103), array([ 1.651073, -1.654689,  0.312986]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _fmsales_PolyTrend_residue_Cycle_None None -0.023773 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'fmsales'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'fmsales' 0 {'Transformation': '_fmsales', 'DecompositionType': 'T+S+R', 'Model': '_fmsales_PolyTrend_residue_Cycle_None_residue_NoAR', 'Voting': 407.6667, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 1.164, 'Forecast_MASE_2': 1.164, 'Forecast_MASE_3': 1.164, 'Forecast_MASE_4': 1.164, 'Forecast_MASE_5': 1.164, 'Forecast_MASE_6': 1.164, 'Forecast_MASE_7': 1.164, 'Forecast_MASE_8': 1.164, 'Forecast_MASE_9': 1.164, 'Forecast_MASE_10': 1.164, 'Forecast_MASE_11': 1.164, 'Forecast_MASE_12': 1.164}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'fmsales' 1 {'Transformation': '_fmsales', 'DecompositionType': 'T+S+R', 'Model': '_fmsales_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 407.6667, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 1.164, 'Forecast_MASE_2': 1.164, 'Forecast_MASE_3': 1.164, 'Forecast_MASE_4': 1.164, 'Forecast_MASE_5': 1.164, 'Forecast_MASE_6': 1.164, 'Forecast_MASE_7': 1.164, 'Forecast_MASE_8': 1.164, 'Forecast_MASE_9': 1.164, 'Forecast_MASE_10': 1.164, 'Forecast_MASE_11': 1.164, 'Forecast_MASE_12': 1.164}
INFO:pyaf.std:COMPETITION_DETAIL_END 'fmsales'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_fmsales.csv_12_fmsales_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_fmsales.csv_12_fmsales_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_fmsales.csv_12_fmsales_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_fmsales.csv_12_fmsales_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_fmsales.csv_12_fmsales_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_fmsales.csv_12_fmsales_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_fmsales.csv_12_fmsales_quantiles_output.png')
PERFORMANCE MAPE_FORECAST fmsales 0.0878
EXECUTION_TIME_DETAIL = {'CMD':'timeout 480 python tests/expsmooth/expsmooth_dataset_fmsales.py', 'ElapsedTimeSecs':(62.58, 1.13, 30.84), 'MAX_MEM_KB':245820, 'CPU_PRCNT':'51%', 'FILES_IN':8, 'FILES_OUT':5320, 'EXIT_STATUS':0}
