INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['bonds'], 'Horizons': {'bonds': 2}}
INFO:pyaf.std:TRAINING_ENGINE_END 4.441
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1994.0 TimeMax=2002.08333333333 TimeDelta=0.08333333333329973 Horizon=2
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='bonds' Length=125  Min=3.32 Max=8.12  Mean=5.68304 StdDev=1.092533
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_bonds' Min=0.0 Max=1.0  Mean=0.4923 StdDev=0.227611
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_bonds_Lag1Trend_residue_Cycle_5_residue_NoAR' [Lag1Trend + Cycle_5 + NoAR]
INFO:pyaf.std:TREND_DETAIL '_bonds_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_bonds_Lag1Trend_residue_Cycle_5' [Cycle_5]
INFO:pyaf.std:AUTOREG_DETAIL '_bonds_Lag1Trend_residue_Cycle_5_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0323), 'RMSE': np.float64(0.2424), 'MAE': np.float64(0.1956), 'MASE': np.float64(0.9666)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.0434), 'RMSE': np.float64(0.2496), 'MAE': np.float64(0.1794), 'MASE': np.float64(0.9853)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.1106), 'RMSE': np.float64(0.4992), 'MAE': np.float64(0.495), 'MASE': np.float64(1.3026)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=2 {'MAPE': np.float64(0.0513), 'RMSE': np.float64(0.3882), 'MAE': np.float64(0.3123), 'MASE': np.float64(1.5432)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=2 {'MAPE': np.float64(0.0693), 'RMSE': np.float64(0.3894), 'MAE': np.float64(0.2896), 'MASE': np.float64(1.5905)}
INFO:pyaf.std:MODEL_PERFS Test STEP=2 {'MAPE': np.float64(0.1441), 'RMSE': np.float64(0.739), 'MAE': np.float64(0.6625), 'MASE': np.float64(1.7434)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.522917
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _bonds_Lag1Trend_residue_Cycle_5 5 -0.008333 {0: np.float64(-0.007292), 1: np.float64(-0.013542), 2: np.float64(-0.005208), 3: np.float64(-0.010417), 4: np.float64(-0.010417)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'bonds'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'bonds' 0 {'Transformation': '_bonds', 'DecompositionType': 'T+S+R', 'Model': '_bonds_Lag1Trend_residue_Cycle_5_residue_NoAR', 'Voting': 94.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.9853, 'Forecast_MASE_2': 1.5905}
INFO:pyaf.std:COMPETITION_DETAIL_END 'bonds'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_bonds.csv_2_bonds_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_bonds.csv_2_bonds_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_bonds.csv_2_bonds_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_bonds.csv_2_bonds_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_bonds.csv_2_bonds_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_bonds.csv_2_bonds_prediction_intervals_output.png')
/home/runner/work/pyaf/pyaf/pyaf/TS/Plots.py:35: UserWarning: Tight layout not applied. The bottom and top margins cannot be made large enough to accommodate all Axes decorations.
  fig.tight_layout()
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_bonds.csv_2_bonds_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['bonds'], 'Horizons': {'bonds': 4}}
PERFORMANCE MAPE_FORECAST bonds 0.0693
INFO:pyaf.std:TRAINING_ENGINE_END 2.941
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1994.0 TimeMax=2001.91666666667 TimeDelta=0.08333333333336763 Horizon=4
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='bonds' Length=125  Min=3.32 Max=8.12  Mean=5.68304 StdDev=1.092533
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_bonds' Min=0.0 Max=1.0  Mean=0.4923 StdDev=0.227611
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_bonds_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [Lag1Trend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL '_bonds_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_bonds_Lag1Trend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL '_bonds_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0336), 'RMSE': np.float64(0.2421), 'MAE': np.float64(0.2027), 'MASE': np.float64(0.9896)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.044), 'RMSE': np.float64(0.247), 'MAE': np.float64(0.184), 'MASE': np.float64(0.9748)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0704), 'RMSE': np.float64(0.3435), 'MAE': np.float64(0.3025), 'MASE': np.float64(0.7961)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=4 {'MAPE': np.float64(0.0825), 'RMSE': np.float64(0.5957), 'MAE': np.float64(0.5009), 'MASE': np.float64(2.4455)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=4 {'MAPE': np.float64(0.1034), 'RMSE': np.float64(0.5496), 'MAE': np.float64(0.4312), 'MASE': np.float64(2.2845)}
INFO:pyaf.std:MODEL_PERFS Test STEP=4 {'MAPE': np.float64(0.0782), 'RMSE': np.float64(0.3883), 'MAE': np.float64(0.33), 'MASE': np.float64(0.8684)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.522917
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES _bonds_Lag1Trend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'bonds'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'bonds' 0 {'Transformation': '_bonds', 'DecompositionType': 'T+S+R', 'Model': '_bonds_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 155.0, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.9748, 'Forecast_MASE_2': 1.6085, 'Forecast_MASE_3': 1.9645, 'Forecast_MASE_4': 2.2845}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'bonds' 1 {'Transformation': 'CumSum_bonds', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_bonds_Lag1Trend_residue_Cycle_None_residue_NoAR', 'Voting': 155.0, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.9748, 'Forecast_MASE_2': 1.6085, 'Forecast_MASE_3': 1.9645, 'Forecast_MASE_4': 2.2845}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'bonds' 2 {'Transformation': 'CumSum_bonds', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_bonds_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 155.0, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.9748, 'Forecast_MASE_2': 1.6085, 'Forecast_MASE_3': 1.9645, 'Forecast_MASE_4': 2.2845}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'bonds' 3 {'Transformation': 'Diff_bonds', 'DecompositionType': 'T+S+R', 'Model': 'Diff_bonds_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 155.0, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.9748, 'Forecast_MASE_2': 1.6085, 'Forecast_MASE_3': 1.9645, 'Forecast_MASE_4': 2.2845}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'bonds' 4 {'Transformation': 'RelDiff_bonds', 'DecompositionType': 'T+S+R', 'Model': 'RelDiff_bonds_Lag1Trend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 155.0, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.9748, 'Forecast_MASE_2': 1.6085, 'Forecast_MASE_3': 1.9645, 'Forecast_MASE_4': 2.2845}
INFO:pyaf.std:COMPETITION_DETAIL_END 'bonds'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_bonds.csv_4_bonds_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_bonds.csv_4_bonds_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_bonds.csv_4_bonds_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_bonds.csv_4_bonds_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_bonds.csv_4_bonds_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_bonds.csv_4_bonds_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_bonds.csv_4_bonds_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['bonds'], 'Horizons': {'bonds': 8}}
PERFORMANCE MAPE_FORECAST bonds 0.1034
INFO:pyaf.std:TRAINING_ENGINE_END 7.836
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1994.0 TimeMax=2001.66666666667 TimeDelta=0.08333333333336876 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='bonds' Length=125  Min=3.32 Max=8.12  Mean=5.68304 StdDev=1.092533
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='RelDiff_bonds' Min=-0.099815 Max=0.183735  Mean=-0.000604 StdDev=0.047773
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'RelDiff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'RelDiff_bonds_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'RelDiff_bonds_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'RelDiff_bonds_LinearTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'RelDiff_bonds_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.1081), 'RMSE': np.float64(0.8451), 'MAE': np.float64(0.6453), 'MASE': np.float64(3.1696)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.0763), 'RMSE': np.float64(0.3753), 'MAE': np.float64(0.326), 'MASE': np.float64(1.524)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.1828), 'RMSE': np.float64(0.8381), 'MAE': np.float64(0.785), 'MASE': np.float64(3.953)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=8 {'MAPE': np.float64(0.1081), 'RMSE': np.float64(0.8451), 'MAE': np.float64(0.6453), 'MASE': np.float64(3.1696)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=8 {'MAPE': np.float64(0.0763), 'RMSE': np.float64(0.3753), 'MAE': np.float64(0.326), 'MASE': np.float64(1.524)}
INFO:pyaf.std:MODEL_PERFS Test STEP=8 {'MAPE': np.float64(0.1828), 'RMSE': np.float64(0.8381), 'MAE': np.float64(0.785), 'MASE': np.float64(3.953)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'M', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [MSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:REALTIVE_DIFFERENCING_TRANSFORMATION RelativeDifference 0.7179802955665026
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (np.float64(0.007972), array([-0.018734]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES RelDiff_bonds_LinearTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'bonds'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'bonds' 0 {'Transformation': 'RelDiff_bonds', 'DecompositionType': 'T+S+R', 'Model': 'RelDiff_bonds_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 278.375, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 1.524, 'Forecast_MASE_2': 1.524, 'Forecast_MASE_3': 1.524, 'Forecast_MASE_4': 1.524, 'Forecast_MASE_5': 1.524, 'Forecast_MASE_6': 1.524, 'Forecast_MASE_7': 1.524, 'Forecast_MASE_8': 1.524}
INFO:pyaf.std:COMPETITION_DETAIL_END 'bonds'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_bonds.csv_8_bonds_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_bonds.csv_8_bonds_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_bonds.csv_8_bonds_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_bonds.csv_8_bonds_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_bonds.csv_8_bonds_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_bonds.csv_8_bonds_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_bonds.csv_8_bonds_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['bonds'], 'Horizons': {'bonds': 12}}
PERFORMANCE MAPE_FORECAST bonds 0.0763
INFO:pyaf.std:TRAINING_ENGINE_END 7.523
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1994.0 TimeMax=2001.41666666667 TimeDelta=0.08333333333336995 Horizon=12
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='bonds' Length=125  Min=3.32 Max=8.12  Mean=5.68304 StdDev=1.092533
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_bonds' Min=-0.1125 Max=0.127083  Mean=-0.001883 StdDev=0.051412
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_bonds_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [LinearTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_bonds_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_bonds_LinearTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_bonds_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0983), 'RMSE': np.float64(0.7903), 'MAE': np.float64(0.6014), 'MASE': np.float64(2.9358)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.0594), 'RMSE': np.float64(0.3122), 'MAE': np.float64(0.2646), 'MASE': np.float64(1.4232)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.2019), 'RMSE': np.float64(0.9298), 'MAE': np.float64(0.8535), 'MASE': np.float64(3.5031)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=12 {'MAPE': np.float64(0.0983), 'RMSE': np.float64(0.7903), 'MAE': np.float64(0.6014), 'MASE': np.float64(2.9358)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=12 {'MAPE': np.float64(0.0594), 'RMSE': np.float64(0.3122), 'MAE': np.float64(0.2646), 'MASE': np.float64(1.4232)}
INFO:pyaf.std:MODEL_PERFS Test STEP=12 {'MAPE': np.float64(0.2019), 'RMSE': np.float64(0.9298), 'MAE': np.float64(0.8535), 'MASE': np.float64(3.5031)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'M', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [MSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.5229166666666668
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (np.float64(0.007569), array([-0.017776]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_bonds_LinearTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'bonds'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'bonds' 0 {'Transformation': 'Diff_bonds', 'DecompositionType': 'T+S+R', 'Model': 'Diff_bonds_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 407.8333, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 1.4232, 'Forecast_MASE_2': 1.4232, 'Forecast_MASE_3': 1.4232, 'Forecast_MASE_4': 1.4232, 'Forecast_MASE_5': 1.4232, 'Forecast_MASE_6': 1.4232, 'Forecast_MASE_7': 1.4232, 'Forecast_MASE_8': 1.4232, 'Forecast_MASE_9': 1.4232, 'Forecast_MASE_10': 1.4232, 'Forecast_MASE_11': 1.4232, 'Forecast_MASE_12': 1.4232}
INFO:pyaf.std:COMPETITION_DETAIL_END 'bonds'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_bonds.csv_12_bonds_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_bonds.csv_12_bonds_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_bonds.csv_12_bonds_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_bonds.csv_12_bonds_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_bonds.csv_12_bonds_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_bonds.csv_12_bonds_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_bonds.csv_12_bonds_quantiles_output.png')
PERFORMANCE MAPE_FORECAST bonds 0.0594
EXECUTION_TIME_DETAIL = {'CMD':'timeout 480 python tests/expsmooth/expsmooth_dataset_bonds.py', 'ElapsedTimeSecs':(62.03, 1.21, 30.59), 'MAX_MEM_KB':244724, 'CPU_PRCNT':'51%', 'FILES_IN':8, 'FILES_OUT':6848, 'EXIT_STATUS':0}
