INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['usnetelec'], 'Horizons': {'usnetelec': 2}}
INFO:pyaf.std:TRAINING_ENGINE_END 2.562
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1949 TimeMax=1990 TimeDelta=1 Horizon=2
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='usnetelec' Length=55  Min=296.1 Max=3858.5  Mean=1972.06 StdDev=1119.355557
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_usnetelec' Min=0.0 Max=1.0  Mean=0.470458 StdDev=0.314214
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_usnetelec_Lag1Trend_residue_Cycle_5_residue_NoAR' [Lag1Trend + Cycle_5 + NoAR]
INFO:pyaf.std:TREND_DETAIL '_usnetelec_Lag1Trend' [Lag1Trend]
INFO:pyaf.std:CYCLE_DETAIL '_usnetelec_Lag1Trend_residue_Cycle_5' [Cycle_5]
INFO:pyaf.std:AUTOREG_DETAIL '_usnetelec_Lag1Trend_residue_Cycle_5_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0306), 'RMSE': np.float64(48.541), 'MAE': np.float64(33.4357), 'MASE': np.float64(0.4812)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.0121), 'RMSE': np.float64(50.7133), 'MAE': np.float64(41.9727), 'MASE': np.float64(0.5288)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0185), 'RMSE': np.float64(72.7026), 'MAE': np.float64(71.175), 'MASE': np.float64(6.7786)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=2 {'MAPE': np.float64(0.055), 'RMSE': np.float64(80.2492), 'MAE': np.float64(61.7071), 'MASE': np.float64(0.888)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=2 {'MAPE': np.float64(0.0129), 'RMSE': np.float64(51.5784), 'MAE': np.float64(44.7909), 'MASE': np.float64(0.5643)}
INFO:pyaf.std:MODEL_PERFS Test STEP=2 {'MAPE': np.float64(0.0112), 'RMSE': np.float64(45.1499), 'MAE': np.float64(43.1), 'MASE': np.float64(4.1048)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LAG1_TREND Lag1Trend 0.0
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _usnetelec_Lag1Trend_residue_Cycle_5 5 0.017825 {0: np.float64(0.018218), 1: np.float64(0.015018), 2: np.float64(0.013306), 3: np.float64(0.018401), 4: np.float64(0.021194)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'usnetelec'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'usnetelec' 0 {'Transformation': '_usnetelec', 'DecompositionType': 'T+S+R', 'Model': '_usnetelec_Lag1Trend_residue_Cycle_5_residue_NoAR', 'Voting': 94.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 0.5288, 'Forecast_MASE_2': 0.5643}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'usnetelec' 1 {'Transformation': 'Diff_usnetelec', 'DecompositionType': 'T+S+R', 'Model': 'Diff_usnetelec_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 94.0, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 0.562, 'Forecast_MASE_2': 0.562}
INFO:pyaf.std:COMPETITION_DETAIL_END 'usnetelec'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_usnetelec.csv_2_usnetelec_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_usnetelec.csv_2_usnetelec_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_usnetelec.csv_2_usnetelec_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_usnetelec.csv_2_usnetelec_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_usnetelec.csv_2_usnetelec_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_usnetelec.csv_2_usnetelec_prediction_intervals_output.png')
/home/runner/work/pyaf/pyaf/pyaf/TS/Plots.py:35: UserWarning: Tight layout not applied. The bottom and top margins cannot be made large enough to accommodate all Axes decorations.
  fig.tight_layout()
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_usnetelec.csv_2_usnetelec_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['usnetelec'], 'Horizons': {'usnetelec': 4}}
PERFORMANCE MAPE_FORECAST usnetelec 0.0129
INFO:pyaf.std:TRAINING_ENGINE_END 4.293
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1949 TimeMax=1988 TimeDelta=1 Horizon=4
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='usnetelec' Length=55  Min=296.1 Max=3858.5  Mean=1972.06 StdDev=1119.355557
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='CumSum_usnetelec' Min=0.0 Max=25.875196  Mean=8.204728 StdDev=7.860061
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'CumSum_'
INFO:pyaf.std:BEST_DECOMPOSITION  'CumSum_usnetelec_PolyTrend_residue_Cycle_None_residue_NoAR' [PolyTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL 'CumSum_usnetelec_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL 'CumSum_usnetelec_PolyTrend_residue_Cycle_None' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL 'CumSum_usnetelec_PolyTrend_residue_Cycle_None_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0954), 'RMSE': np.float64(100.7941), 'MAE': np.float64(88.2434), 'MASE': np.float64(1.3665)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.012), 'RMSE': np.float64(46.4617), 'MAE': np.float64(39.0446), 'MASE': np.float64(0.5367)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0155), 'RMSE': np.float64(69.0937), 'MAE': np.float64(59.0006), 'MASE': np.float64(0.8944)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=4 {'MAPE': np.float64(0.0954), 'RMSE': np.float64(100.7941), 'MAE': np.float64(88.2434), 'MASE': np.float64(1.3665)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=4 {'MAPE': np.float64(0.012), 'RMSE': np.float64(46.4617), 'MAE': np.float64(39.0446), 'MASE': np.float64(0.5367)}
INFO:pyaf.std:MODEL_PERFS Test STEP=4 {'MAPE': np.float64(0.0155), 'RMSE': np.float64(69.0937), 'MAE': np.float64(59.0006), 'MASE': np.float64(0.8944)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'M', 'Trend': 'M', 'Cycle': 'S', 'AR': 'S'} [MMSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES Integration None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (np.float64(0.139486), array([-2.165367, 14.364156,  0.4665  ]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES CumSum_usnetelec_PolyTrend_residue_Cycle_None None 0.001353 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'usnetelec'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'usnetelec' 0 {'Transformation': 'CumSum_usnetelec', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_usnetelec_PolyTrend_residue_Cycle_None_residue_NoAR', 'Voting': 157.5, 'Complexity': 'MMSSS', 'Forecast_MASE_1': 0.5367, 'Forecast_MASE_2': 0.5367, 'Forecast_MASE_3': 0.5367, 'Forecast_MASE_4': 0.5367}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'usnetelec' 1 {'Transformation': 'CumSum_usnetelec', 'DecompositionType': 'T+S+R', 'Model': 'CumSum_usnetelec_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 157.5, 'Complexity': 'MMSSS', 'Forecast_MASE_1': 0.5367, 'Forecast_MASE_2': 0.5367, 'Forecast_MASE_3': 0.5367, 'Forecast_MASE_4': 0.5367}
INFO:pyaf.std:COMPETITION_DETAIL_END 'usnetelec'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_usnetelec.csv_4_usnetelec_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_usnetelec.csv_4_usnetelec_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_usnetelec.csv_4_usnetelec_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_usnetelec.csv_4_usnetelec_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_usnetelec.csv_4_usnetelec_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_usnetelec.csv_4_usnetelec_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_usnetelec.csv_4_usnetelec_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['usnetelec'], 'Horizons': {'usnetelec': 8}}
PERFORMANCE MAPE_FORECAST usnetelec 0.012
INFO:pyaf.std:TRAINING_ENGINE_END 8.576
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1949 TimeMax=1985 TimeDelta=1 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='usnetelec' Length=55  Min=296.1 Max=3858.5  Mean=1972.06 StdDev=1119.355557
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_usnetelec' Min=-0.018386 Max=0.072956  Mean=0.018128 StdDev=0.014222
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_usnetelec_LinearTrend_residue_Cycle_5_residue_NoAR' [LinearTrend + Cycle_5 + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_usnetelec_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_usnetelec_LinearTrend_residue_Cycle_5' [Cycle_5]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_usnetelec_LinearTrend_residue_Cycle_5_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.1028), 'RMSE': np.float64(118.8274), 'MAE': np.float64(103.5829), 'MASE': np.float64(1.6326)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.0338), 'RMSE': np.float64(118.1802), 'MAE': np.float64(102.5617), 'MASE': np.float64(1.0696)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0249), 'RMSE': np.float64(103.2947), 'MAE': np.float64(91.0596), 'MASE': np.float64(1.1468)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=8 {'MAPE': np.float64(0.1028), 'RMSE': np.float64(118.8274), 'MAE': np.float64(103.5829), 'MASE': np.float64(1.6326)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=8 {'MAPE': np.float64(0.0338), 'RMSE': np.float64(118.1802), 'MAE': np.float64(102.5617), 'MASE': np.float64(1.0696)}
INFO:pyaf.std:MODEL_PERFS Test STEP=8 {'MAPE': np.float64(0.0249), 'RMSE': np.float64(103.2947), 'MAE': np.float64(91.0596), 'MASE': np.float64(1.1468)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'M', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [MSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (np.float64(0.012821), array([0.00739]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES Diff_usnetelec_LinearTrend_residue_Cycle_5 5 0.000789 {0: np.float64(-0.001329), 1: np.float64(-0.00229), 2: np.float64(0.000789), 3: np.float64(0.001578), 4: np.float64(0.001738)}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'usnetelec'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'usnetelec' 0 {'Transformation': 'Diff_usnetelec', 'DecompositionType': 'T+S+R', 'Model': 'Diff_usnetelec_LinearTrend_residue_Cycle_5_residue_NoAR', 'Voting': 280.375, 'Complexity': 'MSSSS', 'Forecast_MASE_1': 1.0696, 'Forecast_MASE_2': 1.0696, 'Forecast_MASE_3': 1.0696, 'Forecast_MASE_4': 1.0696, 'Forecast_MASE_5': 1.0696, 'Forecast_MASE_6': 1.0696, 'Forecast_MASE_7': 1.0696, 'Forecast_MASE_8': 1.0696}
INFO:pyaf.std:COMPETITION_DETAIL_END 'usnetelec'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_usnetelec.csv_8_usnetelec_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_usnetelec.csv_8_usnetelec_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_usnetelec.csv_8_usnetelec_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_usnetelec.csv_8_usnetelec_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_usnetelec.csv_8_usnetelec_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_usnetelec.csv_8_usnetelec_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_usnetelec.csv_8_usnetelec_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['usnetelec'], 'Horizons': {'usnetelec': 12}}
PERFORMANCE MAPE_FORECAST usnetelec 0.0338
INFO:pyaf.std:TRAINING_ENGINE_END 9.966
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1949 TimeMax=2003 TimeDelta=1 Horizon=12
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='usnetelec' Length=55  Min=296.1 Max=3858.5  Mean=1972.06 StdDev=1119.355557
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='Diff_usnetelec' Min=-0.018386 Max=0.072956  Mean=0.018128 StdDev=0.014222
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE 'Diff_'
INFO:pyaf.std:BEST_DECOMPOSITION  'Diff_usnetelec_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR' [PolyTrend + NoCycle + NoAR]
INFO:pyaf.std:TREND_DETAIL 'Diff_usnetelec_PolyTrend' [PolyTrend]
INFO:pyaf.std:CYCLE_DETAIL 'Diff_usnetelec_PolyTrend_residue_zeroCycle[0.0]' [NoCycle]
INFO:pyaf.std:AUTOREG_DETAIL 'Diff_usnetelec_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.0363), 'RMSE': np.float64(85.3048), 'MAE': np.float64(63.6041), 'MASE': np.float64(0.9012)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.0363), 'RMSE': np.float64(85.3048), 'MAE': np.float64(63.6041), 'MASE': np.float64(0.9012)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.0363), 'RMSE': np.float64(85.3048), 'MAE': np.float64(63.6041), 'MASE': np.float64(0.9012)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=12 {'MAPE': np.float64(0.0363), 'RMSE': np.float64(85.3048), 'MAE': np.float64(63.6041), 'MASE': np.float64(0.9012)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=12 {'MAPE': np.float64(0.0363), 'RMSE': np.float64(85.3048), 'MAE': np.float64(63.6041), 'MASE': np.float64(0.9012)}
INFO:pyaf.std:MODEL_PERFS Test STEP=12 {'MAPE': np.float64(0.0363), 'RMSE': np.float64(85.3048), 'MAE': np.float64(63.6041), 'MASE': np.float64(0.9012)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'M', 'Trend': 'M', 'Cycle': 'S', 'AR': 'S'} [MMSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:DIFFERENCING_TRANSFORMATION Difference 0.0
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:POLYNOMIAL_RIDGE_TREND PolyTrend (np.float64(0.006464), array([ 0.058299, -0.060298,  0.010994]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:ZERO_CYCLE_MODEL_VALUES Diff_usnetelec_PolyTrend_residue_zeroCycle[0.0] 0.0 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'usnetelec'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'usnetelec' 0 {'Transformation': 'Diff_usnetelec', 'DecompositionType': 'T+S+R', 'Model': 'Diff_usnetelec_PolyTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 407.4167, 'Complexity': 'MMSSS', 'Forecast_MASE_1': 0.9012, 'Forecast_MASE_2': 0.9012, 'Forecast_MASE_3': 0.9012, 'Forecast_MASE_4': 0.9012, 'Forecast_MASE_5': 0.9012, 'Forecast_MASE_6': 0.9012, 'Forecast_MASE_7': 0.9012, 'Forecast_MASE_8': 0.9012, 'Forecast_MASE_9': 0.9012, 'Forecast_MASE_10': 0.9012, 'Forecast_MASE_11': 0.9012, 'Forecast_MASE_12': 0.9012}
INFO:pyaf.std:COMPETITION_DETAIL_END 'usnetelec'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_usnetelec.csv_12_usnetelec_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_usnetelec.csv_12_usnetelec_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_usnetelec.csv_12_usnetelec_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_usnetelec.csv_12_usnetelec_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_usnetelec.csv_12_usnetelec_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_usnetelec.csv_12_usnetelec_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_usnetelec.csv_12_usnetelec_quantiles_output.png')
PERFORMANCE MAPE_FORECAST usnetelec 0.0363
EXECUTION_TIME_DETAIL = {'CMD':'timeout 480 python tests/expsmooth/expsmooth_dataset_usnetelec.py', 'ElapsedTimeSecs':(63.68, 1.17, 31.13), 'MAX_MEM_KB':238536, 'CPU_PRCNT':'50%', 'FILES_IN':8, 'FILES_OUT':5096, 'EXIT_STATUS':0}
