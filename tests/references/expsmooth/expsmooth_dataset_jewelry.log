INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['jewelry'], 'Horizons': {'jewelry': 2}}
INFO:pyaf.std:TRAINING_ENGINE_END 1.91
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1998.07692307692 TimeMax=1999.92307692308 TimeDelta=0.019230769230835183 Horizon=2
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='jewelry' Length=124  Min=46 Max=426  Mean=124.725806 StdDev=64.433679
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_jewelry' Min=0.0 Max=1.0  Mean=0.207173 StdDev=0.169562
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_jewelry_ConstantTrend_residue_Cycle_None_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_jewelry_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_jewelry_ConstantTrend_residue_Cycle_None' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_jewelry_ConstantTrend_residue_Cycle_None_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.3414), 'RMSE': np.float64(58.0326), 'MAE': np.float64(37.746), 'MASE': np.float64(1.1904)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.1974), 'RMSE': np.float64(88.5534), 'MAE': np.float64(46.7179), 'MASE': np.float64(1.1915)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.1677), 'RMSE': np.float64(27.4954), 'MAE': np.float64(24.4897), 'MASE': np.float64(0.9796)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=2 {'MAPE': np.float64(0.3414), 'RMSE': np.float64(58.0326), 'MAE': np.float64(37.746), 'MASE': np.float64(1.1904)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=2 {'MAPE': np.float64(0.1974), 'RMSE': np.float64(88.5534), 'MAE': np.float64(46.7179), 'MASE': np.float64(1.1915)}
INFO:pyaf.std:MODEL_PERFS Test STEP=2 {'MAPE': np.float64(0.1677), 'RMSE': np.float64(27.4954), 'MAE': np.float64(24.4897), 'MASE': np.float64(0.9796)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _jewelry_ConstantTrend 0.184238
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _jewelry_ConstantTrend_residue_Cycle_None None -0.036869 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'jewelry'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'jewelry' 0 {'Transformation': '_jewelry', 'DecompositionType': 'T+S+R', 'Model': '_jewelry_ConstantTrend_residue_Cycle_None_residue_NoAR', 'Voting': 89.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 1.1915, 'Forecast_MASE_2': 1.1915}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'jewelry' 1 {'Transformation': '_jewelry', 'DecompositionType': 'T+S+R', 'Model': '_jewelry_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 89.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 1.1915, 'Forecast_MASE_2': 1.1915}
INFO:pyaf.std:COMPETITION_DETAIL_END 'jewelry'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_jewelry.csv_2_jewelry_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_jewelry.csv_2_jewelry_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_jewelry.csv_2_jewelry_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_jewelry.csv_2_jewelry_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_jewelry.csv_2_jewelry_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_jewelry.csv_2_jewelry_prediction_intervals_output.png')
/home/runner/work/pyaf/pyaf/pyaf/TS/Plots.py:35: UserWarning: Tight layout not applied. The bottom and top margins cannot be made large enough to accommodate all Axes decorations.
  fig.tight_layout()
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_jewelry.csv_2_jewelry_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['jewelry'], 'Horizons': {'jewelry': 4}}
PERFORMANCE MAPE_FORECAST jewelry 0.1974
INFO:pyaf.std:TRAINING_ENGINE_END 3.628
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1998.07692307692 TimeMax=1999.90384615385 TimeDelta=0.01923076923084361 Horizon=4
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='jewelry' Length=124  Min=46 Max=426  Mean=124.725806 StdDev=64.433679
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_jewelry' Min=0.0 Max=1.0  Mean=0.207173 StdDev=0.169562
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_jewelry_ConstantTrend_residue_Cycle_None_residue_NoAR' [ConstantTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_jewelry_ConstantTrend' [ConstantTrend]
INFO:pyaf.std:CYCLE_DETAIL '_jewelry_ConstantTrend_residue_Cycle_None' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_jewelry_ConstantTrend_residue_Cycle_None_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.3201), 'RMSE': np.float64(48.9026), 'MAE': np.float64(33.9928), 'MASE': np.float64(1.1221)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.2299), 'RMSE': np.float64(111.8095), 'MAE': np.float64(61.3646), 'MASE': np.float64(1.4999)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.1537), 'RMSE': np.float64(26.8733), 'MAE': np.float64(22.2187), 'MASE': np.float64(1.0415)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=4 {'MAPE': np.float64(0.3201), 'RMSE': np.float64(48.9026), 'MAE': np.float64(33.9928), 'MASE': np.float64(1.1221)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=4 {'MAPE': np.float64(0.2299), 'RMSE': np.float64(111.8095), 'MAE': np.float64(61.3646), 'MASE': np.float64(1.4999)}
INFO:pyaf.std:MODEL_PERFS Test STEP=4 {'MAPE': np.float64(0.1537), 'RMSE': np.float64(26.8733), 'MAE': np.float64(22.2187), 'MASE': np.float64(1.0415)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:CONSTANT_TREND _jewelry_ConstantTrend 0.17574
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _jewelry_ConstantTrend_residue_Cycle_None None -0.029688 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'jewelry'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'jewelry' 0 {'Transformation': '_jewelry', 'DecompositionType': 'T+S+R', 'Model': '_jewelry_ConstantTrend_residue_Cycle_None_residue_NoAR', 'Voting': 149.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 1.4999, 'Forecast_MASE_2': 1.4999, 'Forecast_MASE_3': 1.4999, 'Forecast_MASE_4': 1.4999}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'jewelry' 1 {'Transformation': '_jewelry', 'DecompositionType': 'T+S+R', 'Model': '_jewelry_ConstantTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 149.5, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 1.4999, 'Forecast_MASE_2': 1.4999, 'Forecast_MASE_3': 1.4999, 'Forecast_MASE_4': 1.4999}
INFO:pyaf.std:COMPETITION_DETAIL_END 'jewelry'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_jewelry.csv_4_jewelry_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_jewelry.csv_4_jewelry_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_jewelry.csv_4_jewelry_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_jewelry.csv_4_jewelry_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_jewelry.csv_4_jewelry_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_jewelry.csv_4_jewelry_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_jewelry.csv_4_jewelry_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['jewelry'], 'Horizons': {'jewelry': 8}}
PERFORMANCE MAPE_FORECAST jewelry 0.2299
INFO:pyaf.std:TRAINING_ENGINE_END 6.597
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1998.07692307692 TimeMax=1999.82692307692 TimeDelta=0.019230769230769232 Horizon=8
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='jewelry' Length=124  Min=46 Max=426  Mean=124.725806 StdDev=64.433679
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_jewelry' Min=0.0 Max=1.0  Mean=0.207173 StdDev=0.169562
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_jewelry_LinearTrend_residue_Cycle_None_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_jewelry_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_jewelry_LinearTrend_residue_Cycle_None' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_jewelry_LinearTrend_residue_Cycle_None_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.2774), 'RMSE': np.float64(43.4291), 'MAE': np.float64(29.0844), 'MASE': np.float64(0.9894)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.2675), 'RMSE': np.float64(109.404), 'MAE': np.float64(65.8472), 'MASE': np.float64(1.6462)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.1523), 'RMSE': np.float64(45.5517), 'MAE': np.float64(27.3359), 'MASE': np.float64(0.5103)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=8 {'MAPE': np.float64(0.2774), 'RMSE': np.float64(43.4291), 'MAE': np.float64(29.0844), 'MASE': np.float64(0.9894)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=8 {'MAPE': np.float64(0.2675), 'RMSE': np.float64(109.404), 'MAE': np.float64(65.8472), 'MASE': np.float64(1.6462)}
INFO:pyaf.std:MODEL_PERFS Test STEP=8 {'MAPE': np.float64(0.1523), 'RMSE': np.float64(45.5517), 'MAE': np.float64(27.3359), 'MASE': np.float64(0.5103)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (np.float64(0.124504), array([0.082286]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _jewelry_LinearTrend_residue_Cycle_None None -0.024666 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'jewelry'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'jewelry' 0 {'Transformation': '_jewelry', 'DecompositionType': 'T+S+R', 'Model': '_jewelry_LinearTrend_residue_Cycle_None_residue_NoAR', 'Voting': 278.0, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 1.6462, 'Forecast_MASE_2': 1.6462, 'Forecast_MASE_3': 1.6462, 'Forecast_MASE_4': 1.6462, 'Forecast_MASE_5': 1.6462, 'Forecast_MASE_6': 1.6462, 'Forecast_MASE_7': 1.6462, 'Forecast_MASE_8': 1.6462}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'jewelry' 1 {'Transformation': '_jewelry', 'DecompositionType': 'T+S+R', 'Model': '_jewelry_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 278.0, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 1.6462, 'Forecast_MASE_2': 1.6462, 'Forecast_MASE_3': 1.6462, 'Forecast_MASE_4': 1.6462, 'Forecast_MASE_5': 1.6462, 'Forecast_MASE_6': 1.6462, 'Forecast_MASE_7': 1.6462, 'Forecast_MASE_8': 1.6462}
INFO:pyaf.std:COMPETITION_DETAIL_END 'jewelry'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_jewelry.csv_8_jewelry_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_jewelry.csv_8_jewelry_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_jewelry.csv_8_jewelry_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_jewelry.csv_8_jewelry_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_jewelry.csv_8_jewelry_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_jewelry.csv_8_jewelry_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_jewelry.csv_8_jewelry_quantiles_output.png')
INFO:pyaf.std:TRAINING_ENGINE_START {'Signals': ['jewelry'], 'Horizons': {'jewelry': 12}}
PERFORMANCE MAPE_FORECAST jewelry 0.2675
INFO:pyaf.std:TRAINING_ENGINE_END 11.452
INFO:pyaf.std:TIME_DETAIL TimeVariable='Date' TimeMin=1998.07692307692 TimeMax=1999.76923076923 TimeDelta=0.01923076923079686 Horizon=12
INFO:pyaf.std:SIGNAL_DETAIL_ORIG SignalVariable='jewelry' Length=124  Min=46 Max=426  Mean=124.725806 StdDev=64.433679
INFO:pyaf.std:SIGNAL_DETAIL_TRANSFORMED TransformedSignalVariable='_jewelry' Min=0.0 Max=1.0  Mean=0.207173 StdDev=0.169562
INFO:pyaf.std:DECOMPOSITION_TYPE 'T+S+R'
INFO:pyaf.std:BEST_TRANSOFORMATION_TYPE '_'
INFO:pyaf.std:BEST_DECOMPOSITION  '_jewelry_LinearTrend_residue_Cycle_None_residue_NoAR' [LinearTrend + Cycle_None + NoAR]
INFO:pyaf.std:TREND_DETAIL '_jewelry_LinearTrend' [LinearTrend]
INFO:pyaf.std:CYCLE_DETAIL '_jewelry_LinearTrend_residue_Cycle_None' [Cycle_None]
INFO:pyaf.std:AUTOREG_DETAIL '_jewelry_LinearTrend_residue_Cycle_None_residue_NoAR' [NoAR]
INFO:pyaf.std:MODEL_PERFS Fit STEP=1 {'MAPE': np.float64(0.2811), 'RMSE': np.float64(43.8416), 'MAE': np.float64(29.5123), 'MASE': np.float64(0.9928)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=1 {'MAPE': np.float64(0.3012), 'RMSE': np.float64(110.6932), 'MAE': np.float64(69.349), 'MASE': np.float64(1.5909)}
INFO:pyaf.std:MODEL_PERFS Test STEP=1 {'MAPE': np.float64(0.1409), 'RMSE': np.float64(37.2832), 'MAE': np.float64(22.5842), 'MASE': np.float64(0.5608)}
INFO:pyaf.std:MODEL_PERFS Fit STEP=12 {'MAPE': np.float64(0.2811), 'RMSE': np.float64(43.8416), 'MAE': np.float64(29.5123), 'MASE': np.float64(0.9928)}
INFO:pyaf.std:MODEL_PERFS Forecast STEP=12 {'MAPE': np.float64(0.3012), 'RMSE': np.float64(110.6932), 'MAE': np.float64(69.349), 'MASE': np.float64(1.5909)}
INFO:pyaf.std:MODEL_PERFS Test STEP=12 {'MAPE': np.float64(0.1409), 'RMSE': np.float64(37.2832), 'MAE': np.float64(22.5842), 'MASE': np.float64(0.5608)}
INFO:pyaf.std:MODEL_COMPLEXITY {'Decomposition': 'S', 'Transformation': 'S', 'Trend': 'S', 'Cycle': 'S', 'AR': 'S'} [SSSSS]
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_START
INFO:pyaf.std:SIGNAL_TRANSFORMATION_MODEL_VALUES NoTransf None
INFO:pyaf.std:SIGNAL_TRANSFORMATION_DETAIL_END
INFO:pyaf.std:TREND_DETAIL_START
INFO:pyaf.std:LINEAR_RIDGE_TREND LinearTrend (np.float64(0.120645), array([0.09094]))
INFO:pyaf.std:TREND_DETAIL_END
INFO:pyaf.std:CYCLE_MODEL_DETAIL_START
INFO:pyaf.std:BEST_CYCLE_LENGTH_VALUES _jewelry_LinearTrend_residue_Cycle_None None -0.024839 {}
INFO:pyaf.std:CYCLE_MODEL_DETAIL_END
INFO:pyaf.std:AR_MODEL_DETAIL_START
INFO:pyaf.std:AR_MODEL_DETAIL_END
INFO:pyaf.std:COMPETITION_DETAIL_START 'jewelry'
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'jewelry' 0 {'Transformation': '_jewelry', 'DecompositionType': 'T+S+R', 'Model': '_jewelry_LinearTrend_residue_Cycle_None_residue_NoAR', 'Voting': 407.1667, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 1.5909, 'Forecast_MASE_2': 1.5909, 'Forecast_MASE_3': 1.5909, 'Forecast_MASE_4': 1.5909, 'Forecast_MASE_5': 1.5909, 'Forecast_MASE_6': 1.5909, 'Forecast_MASE_7': 1.5909, 'Forecast_MASE_8': 1.5909, 'Forecast_MASE_9': 1.5909, 'Forecast_MASE_10': 1.5909, 'Forecast_MASE_11': 1.5909, 'Forecast_MASE_12': 1.5909}
INFO:pyaf.std:COMPETITION_DETAIL_SHORT_LIST 'jewelry' 1 {'Transformation': '_jewelry', 'DecompositionType': 'T+S+R', 'Model': '_jewelry_LinearTrend_residue_zeroCycle[0.0]_residue_NoAR', 'Voting': 407.1667, 'Complexity': 'SSSSS', 'Forecast_MASE_1': 1.5909, 'Forecast_MASE_2': 1.5909, 'Forecast_MASE_3': 1.5909, 'Forecast_MASE_4': 1.5909, 'Forecast_MASE_5': 1.5909, 'Forecast_MASE_6': 1.5909, 'Forecast_MASE_7': 1.5909, 'Forecast_MASE_8': 1.5909, 'Forecast_MASE_9': 1.5909, 'Forecast_MASE_10': 1.5909, 'Forecast_MASE_11': 1.5909, 'Forecast_MASE_12': 1.5909}
INFO:pyaf.std:COMPETITION_DETAIL_END 'jewelry'
INFO:pyaf.std:SAVING_PLOT ('Trend', 'outputs/expsmooth_jewelry.csv_12_jewelry_Trend_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Cycle', 'outputs/expsmooth_jewelry.csv_12_jewelry_Cycle_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('AR', 'outputs/expsmooth_jewelry.csv_12_jewelry_AR_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('TransformedForecast', 'outputs/expsmooth_jewelry.csv_12_jewelry_TransformedForecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('Forecast', 'outputs/expsmooth_jewelry.csv_12_jewelry_Forecast_decomp_output.png')
INFO:pyaf.std:SAVING_PLOT ('PredictionIntervals', 'outputs/expsmooth_jewelry.csv_12_jewelry_prediction_intervals_output.png')
INFO:pyaf.std:SAVING_PLOT ('Quantiles', 'outputs/expsmooth_jewelry.csv_12_jewelry_quantiles_output.png')
PERFORMANCE MAPE_FORECAST jewelry 0.3012
EXECUTION_TIME_DETAIL = {'CMD':'timeout 480 python tests/expsmooth/expsmooth_dataset_jewelry.py', 'ElapsedTimeSecs':(60.87, 1.13, 30.86), 'MAX_MEM_KB':246468, 'CPU_PRCNT':'52%', 'FILES_IN':8, 'FILES_OUT':6120, 'EXIT_STATUS':0}
